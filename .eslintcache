[{"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/index.js":"1","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/App.js":"2","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/reportWebVitals.js":"3","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/Login/Login.js":"4","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/MyButton/MyButton.js":"5","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Input/MyInput.js":"6","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/SideBar.js/SideBar.js":"7","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/MyHeader/MyHeader.js":"8","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/MainContent/MainContent.js":"9","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Dashboards/MainDashboard/MainDashboard.js":"10","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/MyTables/MyTables.js":"11","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Content/content.js":"12","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/AddTable.js":"13","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/CompleteTable.js":"14","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/ConfigureSubjects.js":"15","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/ConfigureTable.js":"16","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/SelectSlots.js":"17","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/utils/axiosInterceptor.js":"18","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Spinner/Spinner.js":"19","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AllTables/AllTables.js":"20","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AllTables/DelTable.js":"21","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/EditTable/EditTable.js":"22","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/MyTables/SubjectModal.js":"23","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/UseDisplay/UserDisplay.js":"24","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/SignUp/SignUp.js":"25","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/MyTables/ShareModal.js":"26","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Notification/NotificationPopover.js":"27","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/ViewUser/viewUser.js":"28","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/ViewUser/uploadModal.js":"29","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/ViewUser/EditProfileModal.js":"30","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/MyTables/OwnershipDisplay.js":"31"},{"size":528,"mtime":1606844334304,"results":"32","hashOfConfig":"33"},{"size":3564,"mtime":1618927849061,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1606808428947,"results":"35","hashOfConfig":"33"},{"size":5859,"mtime":1618928369191,"results":"36","hashOfConfig":"33"},{"size":336,"mtime":1606892596086,"results":"37","hashOfConfig":"33"},{"size":275,"mtime":1606848485695,"results":"38","hashOfConfig":"33"},{"size":4575,"mtime":1611724866112,"results":"39","hashOfConfig":"33"},{"size":2288,"mtime":1618928690717,"results":"40","hashOfConfig":"33"},{"size":2179,"mtime":1615140854940,"results":"41","hashOfConfig":"33"},{"size":1416,"mtime":1614020783994,"results":"42","hashOfConfig":"33"},{"size":8587,"mtime":1618909359334,"results":"43","hashOfConfig":"33"},{"size":399,"mtime":1607101194610,"results":"44","hashOfConfig":"33"},{"size":3842,"mtime":1610786217867,"results":"45","hashOfConfig":"33"},{"size":5750,"mtime":1612118135704,"results":"46","hashOfConfig":"33"},{"size":2410,"mtime":1607324393507,"results":"47","hashOfConfig":"33"},{"size":2624,"mtime":1607324759526,"results":"48","hashOfConfig":"33"},{"size":1694,"mtime":1607532827691,"results":"49","hashOfConfig":"33"},{"size":200,"mtime":1618896086506,"results":"50","hashOfConfig":"33"},{"size":379,"mtime":1610009452602,"results":"51","hashOfConfig":"33"},{"size":3701,"mtime":1616264605111,"results":"52","hashOfConfig":"33"},{"size":3239,"mtime":1612247462224,"results":"53","hashOfConfig":"33"},{"size":11039,"mtime":1618930393802,"results":"54","hashOfConfig":"33"},{"size":4552,"mtime":1618915909841,"results":"55","hashOfConfig":"33"},{"size":3104,"mtime":1615272324290,"results":"56","hashOfConfig":"33"},{"size":7324,"mtime":1616264586077,"results":"57","hashOfConfig":"33"},{"size":1871,"mtime":1614019738130,"results":"58","hashOfConfig":"33"},{"size":4944,"mtime":1618904613288,"results":"59","hashOfConfig":"33"},{"size":8452,"mtime":1618896125013,"results":"60","hashOfConfig":"33"},{"size":4673,"mtime":1615273043794,"results":"61","hashOfConfig":"33"},{"size":3780,"mtime":1615285233815,"results":"62","hashOfConfig":"33"},{"size":6239,"mtime":1618937740945,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"bqf76x",{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"66"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"66"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"66"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/index.js",[],["151","152"],"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/App.js",["153","154","155","156","157","158"],"import React, { Component } from \"react\";\nimport { Route, Link, Switch, BrowserRouter, Redirect } from \"react-router-dom\";\nimport logo from \"./assests/clock2.png\";\nimport Login from \"./Pages/Login/Login\";\nimport MainDashboard from \"./Dashboards/MainDashboard/MainDashboard\";\nimport AllTables from \"../src/Pages/AllTables/AllTables\";\nimport { axiosInstance } from \"./utils/axiosInterceptor\";\nimport { message } from \"antd\";\nimport SignUp from \"./Pages/SignUp/SignUp.js\";\nimport axios from \"axios\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedin: false,\n    };\n    this.toggleLoggedIn = this.toggleLoggedIn.bind(this);\n  }\n  toggleLoggedIn() {\n    this.setState({ ...this.state, isLoggedin: !this.state.isLoggedin });\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    // if (token) {\n    //   axiosInstance.interceptors.request.use((config) => {\n    //     const auth = `Bearer ${token}`;\n    //     console.log(auth);\n    //     config.headers.Authorization = `Bearer ${token}`;\n    //     return config;\n    //   });\n    // }\n    // this.toggleLoggedIn();\n    if (token) {\n      axios\n        .post(\"https://localhost:3433/users/checktoken\", {\n          headers: { Authorization: `Bearer ${token}` },\n          token: token,\n        })\n        .then((res) => {\n          console.log(res);\n          axiosInstance.interceptors.request.use((config) => {\n            const auth = `Bearer ${token}`;\n            console.log(auth);\n            config.headers.Authorization = `Bearer ${token}`;\n            return config;\n          });\n          this.toggleLoggedIn();\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }\n  render() {\n    const NoMatch = (props) => {\n      // setTimeout(() => {\n      //   props.history.push(\"/\");\n      // }, 2000);\n\n      return (\n        <>\n          <h1 style={{ textAlign: \"center\", paddingTop: \"10px\" }}>\n            You are not logged in to Real Time Tables.Please login to continue.\n          </h1>\n          <div style={{ textAlign: \"center\" }}>\n            <a href=\"/\">Click here to move to home page</a>\n          </div>\n        </>\n      );\n    };\n    const NoMatch2 = () => <p>Oops nothing found</p>;\n    if (!this.state.isLoggedin) {\n      return (\n        <BrowserRouter>\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              history={this.props.history}\n              render={(props) => (\n                <Login\n                  history={props.history}\n                  toggleLoggedIn={this.toggleLoggedIn}\n                ></Login>\n              )}\n            ></Route>\n            <Route\n              path=\"/signUp\"\n              exact\n              history={this.props.history}\n              render={(props) => <SignUp history={props.history}></SignUp>}\n            ></Route>\n            <Route\n              path=\"*\"\n              component={(props) => {\n                return <NoMatch history={props.history}></NoMatch>;\n              }}\n            />\n          </Switch>\n        </BrowserRouter>\n      );\n    } else {\n      return (\n        <BrowserRouter>\n          <Switch>\n            <Route\n              path=\"/\"\n              render={(props) => (\n                <MainDashboard\n                  history={props.history}\n                  toggleLoggedIn={this.toggleLoggedIn}\n                ></MainDashboard>\n              )}\n            ></Route>\n          </Switch>\n        </BrowserRouter>\n      );\n    }\n  }\n}\n\nexport default App;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/reportWebVitals.js",[],"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/Login/Login.js",["159","160","161","162","163","164","165","166","167","168"],"import React, { Component } from \"react\";\nimport logo from \"../../assests/clock1.svg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faExclamation,\n  faSignInAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Input, Button, Tooltip, message } from \"antd\";\nimport \"./Login.css\";\nimport MyButton from \"../../Components/MyButton/MyButton\";\nimport MyInput from \"../../Components/Input/MyInput\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: null,\n      password: null,\n      loading: false,\n      userTooltip: false,\n      passwordTooltip: false,\n      btnLoading: false,\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  handleLogin = () => {\n    const { username, password } = this.state;\n    console.log(username, password);\n    if (\n      username != null &&\n      username != \"\" &&\n      password != null &&\n      password != \"\"\n    ) {\n      this.setState(\n        {\n          ...this.state,\n          userTooltip: false,\n          passwordTooltip: false,\n          btnLoading: true,\n        },\n        () => {\n          axios\n            .post(\"https://localhost:3433/users/login\", {\n              username: username,\n              password: password,\n            })\n            .then((res) => {\n              this.setState({\n                ...this.state,\n                btnLoading: false,\n              });\n              const newToken = res.data.token;\n              axiosInstance.interceptors.request.use((config) => {\n                const auth = `Bearer ${newToken}`;\n                console.log(auth);\n                config.headers.Authorization = `Bearer ${newToken}`;\n                return config;\n              });\n              localStorage.setItem(\"token\", newToken);\n              this.props.toggleLoggedIn();\n              message.success(\"Successfully logged in\");\n              console.log(res);\n            })\n            .catch((err) => {\n              this.setState({\n                ...this.state,\n                btnLoading: false,\n              });\n              console.log(err);\n            });\n        }\n      );\n    } else if (\n      (username == null || username == \"\") &&\n      (password == null || password == \"\")\n    ) {\n      this.setState({\n        ...this.state,\n        userTooltip: true,\n        passwordTooltip: true,\n      });\n    } else if (username == null || username == \"\") {\n      this.setState({\n        ...this.state,\n        userTooltip: true,\n      });\n    } else if (password == null || password == \"\") {\n      this.setState({\n        ...this.state,\n        passwordTooltip: true,\n      });\n    }\n  };\n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"loginheader\">\n          <div>\n            <img src={logo} width={40} height={40}></img>\n            <div id=\"title_name\">Real Time Table</div>\n          </div>\n          <div className=\"links\">\n            <div>About</div>\n          </div>\n        </div>\n        <div className=\"logincontent\">\n          <div>\n            <FontAwesomeIcon icon={faUser} />\n            <div>Login</div>\n          </div>\n          <div ref={this.myBox}>\n            <Tooltip\n              color=\"#FF8A8A\"\n              title={() => {\n                return (\n                  <>\n                    <FontAwesomeIcon icon={faExclamation}></FontAwesomeIcon>\n                    <span> Username required</span>\n                  </>\n                );\n              }}\n              placement=\"topRight\"\n              visible={this.state.userTooltip}\n              overlayClassName=\"numeric-input\"\n            >\n              <MyInput\n                placeholder=\"User Name\"\n                onChange={(event) => {\n                  this.setState({\n                    ...this.state,\n                    userTooltip: false,\n                    username: event.target.value,\n                  });\n                }}\n              ></MyInput>\n            </Tooltip>\n            <Tooltip\n              color=\"#FF8A8A\"\n              placement=\"topRight\"\n              visible={this.state.passwordTooltip}\n              overlayClassName=\"numeric-input\"\n              title={() => {\n                return (\n                  <>\n                    <FontAwesomeIcon icon={faExclamation}></FontAwesomeIcon>\n                    <span> Password required</span>\n                  </>\n                );\n              }}\n            >\n              <Input.Password\n                placeholder=\"password\"\n                onKeyDown={(event) => {\n                  if (event.key === \"Enter\") {\n                    this.handleLogin();\n                  }\n                }}\n                id=\"my_pass\"\n                onChange={(event) => {\n                  this.setState({\n                    ...this.state,\n                    passwordTooltip: false,\n                    password: event.target.value,\n                  });\n                }}\n              />\n            </Tooltip>\n            <div className=\"login_btn\">\n              <MyButton\n                text=\"Login\"\n                loading={false}\n                onClick={this.handleLogin}\n                style={{\n                  width: \"100%\",\n                }}\n                loading={this.state.btnLoading}\n              ></MyButton>\n            </div>\n            <div className=\"signup_btn\">\n              Don't have an account?{\" \"}\n              <Link to=\"/signUp\">\n                <u>SignUp</u>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <div className=\"loginfooter\">\n          * Real Time Tables Created by Yuvraj Mann *\n        </div>\n      </div>\n    );\n  }\n}\nexport default Login;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/MyButton/MyButton.js",["169"],"import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport \"./MyButton.css\";\nclass MyButton extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <Button className=\"outlined\" {...this.props}>\n        {this.props.text}\n      </Button>\n    );\n  }\n}\nexport default MyButton;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Input/MyInput.js",["170"],"import React, { Component } from \"react\";\nimport { Input } from \"antd\";\nimport \"./MyInput.css\";\nclass MyInput extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return <Input id=\"my_inut\" {...this.props}></Input>;\n  }\n}\nexport default MyInput;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/SideBar.js/SideBar.js",["171","172","173","174","175","176","177"],"import React, { Component } from \"react\";\nimport { Layout, Menu, Button, Tooltip, message } from \"antd\";\nimport MyButton from \"../MyButton/MyButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTable, faPlus, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor.js\";\nimport Spinner from \"../Spinner/Spinner\";\nimport \"./SideBar.css\";\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass SideBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tables: null,\n      loading: false,\n      isAllTable: false,\n    };\n    this.getAllTable = this.getAllTable.bind(this);\n  }\n  getAllTable() {\n    this.setState({ ...this.state, loading: true });\n    setTimeout(() => {\n      axiosInstance\n        .get(\"/table\")\n        .then((res) => {\n          console.log(res);\n          this.setState({\n            ...this.state,\n            tables: res.data.results,\n            loading: false,\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            ...this.state,\n            loading: false,\n          });\n          console.log(err);\n          message.warn(err.message);\n        });\n    }, 2000);\n  }\n  componentDidMount() {\n    this.getAllTable();\n  }\n  render() {\n    return (\n      <Sider\n        style={{\n          background: \"#30475e\",\n          boxShadow: \"rgba(114, 114, 114, 0.42) 1px 3px 5px -1px\",\n        }}\n      >\n        <Link to=\"/allTables\">\n          <div className=\"mytable_btn\">\n            {this.props.collapsed ? (\n              <Tooltip title=\"My Tables\" placement=\"right\">\n                <Button\n                  style={{\n                    width: \"90%\",\n                    height: \"50px\",\n                    marginBottom: \"30px\",\n                    justifyContent: \"center\",\n                    backgroundColor: \"#f05454\",\n                    borderColor: \"#f05454\",\n                    color: \"#fff\",\n                    fontWeight: 800,\n                    textAlign: \"center\",\n                  }}\n                >\n                  {this.props.collapsed == false ? (\n                    \"My Tables\"\n                  ) : (\n                    <FontAwesomeIcon icon={faTable}></FontAwesomeIcon>\n                  )}\n                </Button>\n              </Tooltip>\n            ) : (\n              <Button\n                style={{\n                  width: \"90%\",\n                  height: \"50px\",\n                  marginBottom: \"30px\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"#f05454\",\n                  borderColor: \"#f05454\",\n                  color: \"#fff\",\n                  fontWeight: 700,\n                  fontSize: \"18px\",\n                  textAlign: \"center\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                {this.props.collapsed == false ? (\n                  \"My Tables\"\n                ) : (\n                  <FontAwesomeIcon icon={faTable}></FontAwesomeIcon>\n                )}\n              </Button>\n            )}\n          </div>\n        </Link>\n        <Link to=\"/addTable\">\n          <Tooltip title=\"New Table\" placement=\"right\">\n            <div className=\"add_btn\">\n              <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>{\" \"}\n            </div>\n          </Tooltip>\n        </Link>\n        {!this.state.loading ? (\n          <Menu\n            theme=\"dark\"\n            defaultSelectedKeys={[\"1\"]}\n            style={{\n              background: \"#30475e\",\n              height: \"100vh\",\n              overflowY: \"auto\",\n            }}\n            mode=\"inline\"\n            id={this.props.collapsed ? \"col_tables\" : \"tables\"}\n          >\n            {this.state.tables\n              ? this.state.tables.map((table, index) => {\n                  const tableName = table.tableName.replace(/ /g, \"_\");\n                  return (\n                    <Menu.Item key={table._id}>\n                      <Link to={`/tables/${table._id}`}>{table.tableName}</Link>\n                    </Menu.Item>\n                  );\n                })\n              : null}\n          </Menu>\n        ) : (\n          <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n            <Spinner\n              style={{\n                color: \"white\",\n                textAlign: \"center\",\n                fontSize: \"1.8em\",\n              }}\n            ></Spinner>\n          </div>\n        )}\n      </Sider>\n    );\n  }\n}\n\nexport default SideBar;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/MyHeader/MyHeader.js",["178","179","180","181","182","183","184","185","186","187"],"import React, { Component } from \"react\";\nimport { Layout, Tooltip, message, notification } from \"antd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faUser,\n  faShareAlt,\n  faEllipsisH,\n  faSignOutAlt,\n  faBell,\n  faBellOn,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor\";\nimport \"./MyHeader.css\";\n\nimport Spinner from \"../Spinner/Spinner\";\nimport SiteLogo from \"../../assests/clock1.svg\";\nimport UserDisplay from \"../UseDisplay/UserDisplay\";\nimport NotificationPopover from \"../Notification/NotificationPopover\";\n\nconst { Header } = Layout;\nclass MyHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tableName: null,\n    };\n  }\n\n  logout = () => {\n    console.log(this.props.history);\n    this.props.history.push(\"/\");\n    localStorage.setItem(\"token\", null);\n    axiosInstance.interceptors.request.use((config) => {\n      config.headers.Authorization = null;\n      return config;\n    });\n    this.props.toggleLoggedIn();\n    message.success(\"Successfully logged out\");\n  };\n  render() {\n    return (\n      <Header\n        className=\"site-layout-background\"\n        style={{\n          padding: 0,\n          backgroundColor: \"white\",\n          borderLeft: \"1px solid rgba(255, 255, 255, 0.137)\",\n          boxShadow: \"rgba(114, 114, 114, 0.42) 1px 3px 5px -1px\",\n        }}\n      >\n        <div className=\"header_content\">\n          <div className=\"logo_header\">\n            <div>\n              <img src={SiteLogo} width={25}></img>\n            </div>\n            <div>Real Time Tables</div>\n          </div>\n\n          <div className=\"options\">\n            <div className=\"rod\"></div>\n            <NotificationPopover></NotificationPopover>\n            <div className=\"rod\"></div>\n            <UserDisplay></UserDisplay>\n\n            <div className=\"rod\"></div>\n\n            <Tooltip title=\"Logout\">\n              <FontAwesomeIcon\n                icon={faSignOutAlt}\n                style={{ fontSize: \"1.3em\" }}\n                onClick={this.logout}\n              ></FontAwesomeIcon>\n            </Tooltip>\n          </div>\n        </div>\n      </Header>\n    );\n  }\n}\nexport default MyHeader;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/MainContent/MainContent.js",["188","189","190"],"import React, { Component } from \"react\";\nimport { Layout } from \"antd\";\nimport { Table } from \"antd\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport MyTables from \"../../Pages/MyTables/MyTables\";\nimport AddTable from \"../../Pages/AddTable/AddTable\";\nimport AllTables from \"../../Pages/AllTables/AllTables\";\nimport EditTables from \"../../Pages/EditTable/EditTable\";\nimport ViewUser from \"../../Pages/ViewUser/viewUser.js\";\nconst { Content } = Layout;\n\nclass MainContent extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <Content\n        style={{\n          margin: \"40px 20px\",\n          borderRadius: \"20px\",\n          minHeight: \"auto\",\n        }}\n      >\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            children={() => {\n              return <AllTables history={this.props.history}></AllTables>;\n            }}\n          ></Route>\n          <Route\n            path=\"/tables/:tableId\"\n            exact={true}\n            component={() => {\n              return <MyTables history={this.props.history}></MyTables>;\n            }}\n          ></Route>\n          <Route\n            path=\"/viewUser\"\n            exact\n            children={() => {\n              return <ViewUser history={this.props.history}></ViewUser>;\n            }}\n          ></Route>\n          <Route\n            path=\"/addTable\"\n            children={() => {\n              return <AddTable history={this.props.history}></AddTable>;\n            }}\n          ></Route>\n          <Route\n            path=\"/allTables\"\n            children={() => {\n              return <AllTables history={this.props.history}></AllTables>;\n            }}\n          ></Route>\n          <Route\n            path=\"/editTable/:tableId\"\n            exact={true}\n            component={() => {\n              return <EditTables history={this.props.history}></EditTables>;\n            }}\n          ></Route>\n          <Route\n            path=\"*\"\n            component={() => {\n              return <h1>AW SNAP!</h1>;\n            }}\n          />\n        </Switch>\n      </Content>\n    );\n  }\n}\nexport default MainContent;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Dashboards/MainDashboard/MainDashboard.js",["191","192","193","194","195","196","197","198","199","200","201"],"import React, { Component } from \"react\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport SideBar from \"../../Components/SideBar.js/SideBar.js\";\nimport MyHeader from \"../../Components/MyHeader/MyHeader\";\nimport MainContent from \"../../Components/MainContent/MainContent\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport AllTables from \"../../Pages/AllTables/AllTables\";\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\nclass MyTables extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n    };\n  }\n  onCollapse = (collapsed) => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n\n  render() {\n    const page = this.props.history.location.pathname.split(\"/\")[1];\n    const isAllTable = page == \"allTables\";\n\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        {!isAllTable ? (\n          <SideBar\n            collapsed={this.state.collapsed}\n            onCollapse={this.onCollapse}\n            history={this.props.history}\n          ></SideBar>\n        ) : null}\n        <Layout className=\"site-layout\">\n          <MyHeader\n            toggleLoggedIn={this.props.toggleLoggedIn}\n            history={this.props.history}\n          ></MyHeader>\n          <MainContent history={this.props.history}></MainContent>\n        </Layout>\n      </Layout>\n    );\n  }\n}\nexport default MyTables;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/MyTables/MyTables.js",["202","203","204","205","206","207","208","209","210"],"import React, { Component } from \"react\";\nimport TableContent from \"../../Components/Content/content\";\nimport MyButton from \"../../Components/MyButton/MyButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendar,\n  faClock,\n  faSpinner,\n  faShare,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport moment from \"moment\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor.js\";\nimport { Divider, Button, Space, message, Skeleton } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"./MyTables.css\";\nimport SubjectModal from \"./SubjectModal.js\";\nimport ShareModal from \"./ShareModal.js\";\nimport OwnershipDisplay from \"./OwnershipDisplay.js\";\n\nconst days = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\nclass MyTables extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curTime: null,\n      tableName: null,\n      loading: false,\n      columns: [],\n      data: [],\n      pathLink: null,\n      tableId: null,\n      isAccessible: true,\n      makeRequestLoading: false,\n      isButtonDisabled: false,\n      owner: null,\n      viewers: null,\n      editors: null,\n    };\n    this.clock = this.clock.bind(this);\n    this.handleMakeRequest = this.handleMakeRequest.bind(this);\n  }\n  fetchTableDetails = () => {\n    const tableId = this.props.history.location.pathname.split(\"/\")[2];\n    this.setState({ ...this.state, loading: true });\n\n    axiosInstance\n      .get(`/table/${tableId}`)\n      .then((table) => {\n        this.setState({ ...this.state, isAccessible: true });\n        console.log(table);\n        this.createColumns(table.data.periods);\n        this.createData(table.data.table);\n        this.setState({\n          ...this.state,\n          tableName: table.data.tableName,\n          tableId: tableId,\n          loading: false,\n          owner: table.data.user,\n          viewers: table.data.view_access,\n          editors: table.data.edit_access,\n        });\n      })\n      .catch((err) => {\n        console.log(err.response.status);\n        if (err.response.status == 403) {\n          this.setState({ ...this.state, isAccessible: false });\n          message.warn(\"You are forbidden to access this table!\");\n        }\n        if (err.message) {\n          console.log(err.message);\n        }\n        this.setState({\n          ...this.state,\n\n          loading: false,\n        });\n      });\n  };\n  componentDidMount() {\n    let path = `http://localhost:3006/${this.props.history.location.pathname}`;\n    this.clock();\n    setInterval(this.clock, 1000);\n    console.log(\"asdsad\");\n    this.fetchTableDetails();\n  }\n  createColumns(periods) {\n    console.log(periods);\n    var columns = [];\n    let dayCol = {\n      title: \"Day\",\n      dataIndex: \"Day\",\n      key: \"Day\",\n      render: (day) => {\n        return <div style={{ fontWeight: 700 }}>{day}</div>;\n      },\n    };\n    columns.push(dayCol);\n    periods.map((period, index) => {\n      let temp = {};\n      temp[\"title\"] = period[1];\n      temp[\"dataIndex\"] = index + 1;\n      temp[\"key\"] = index + 1;\n      columns.push(temp);\n    });\n    console.log(columns);\n    this.setState({\n      ...this.state,\n      columns: columns,\n    });\n  }\n  createData(data) {\n    var tabledata = [];\n    data.map((row, index) => {\n      var temp = {};\n      temp[\"key\"] = index;\n      temp[\"Day\"] = row.day;\n      let merged = { ...temp, ...row.schedule };\n\n      tabledata.push(merged);\n    });\n    this.setState({\n      ...this.state,\n      data: tabledata,\n    });\n  }\n  clock() {\n    // We create a new Date object and assign it to a variable called \"time\".\n    var time = new Date(),\n      // Access the \"getHours\" method on the Date object with the dot accessor.\n      hours = time.getHours(),\n      // Access the \"getMinutes\" method with the dot accessor.\n      minutes = time.getMinutes(),\n      seconds = time.getSeconds();\n    function harold(standIn) {\n      if (standIn < 10) {\n        standIn = \"0\" + standIn;\n      }\n      return standIn;\n    }\n    var str = `${harold(hours)}:${harold(minutes)}:${harold(seconds)}`;\n    this.setState({ ...this.state, curTime: str });\n  }\n  handleMakeRequest() {\n    const tableId = this.props.history.location.pathname.split(\"/\")[2];\n    this.setState({\n      ...this.state,\n      makeRequestLoading: true,\n    });\n\n    axiosInstance\n      .post(`https://localhost:3433/access/accessRequest/${tableId}`, {\n        access_request: \"View\",\n      })\n      .then((res) => {\n        console.log(res.data);\n        message.success(\"Request sent successfully!\");\n        this.setState({\n          ...this.state,\n          makeRequestLoading: false,\n          isButtonDisabled: true,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          ...this.state,\n          makeRequestLoading: false,\n        });\n        message.warn(\"Failed to make access request\");\n        if (err.message) {\n          console.log(err.message);\n        }\n      });\n  }\n  render() {\n    const d = new Date();\n    // const dateToFormat = \"dddd, MMMM Do YYYY\";\n    const dateToFormat = \"ddd-DD/MM/yyyy\";\n\n    return (\n      <div className=\"wrapper\">\n        {this.state.isAccessible ? (\n          <>\n            <div className=\"tableHeader\">\n              <div className=\"table_name\">\n                My Tables/{this.state.tableName}{\" \"}\n                <ShareModal\n                  pathname={`http://localhost:3006${this.props.history.location.pathname}`}\n                />\n              </div>\n\n              <div className=\"date\">\n                <FontAwesomeIcon icon={faCalendar}></FontAwesomeIcon>\n\n                <div>\n                  {moment().format(dateToFormat)}\n                  {/* {d.getDate()}-{d.getMonth() + 1}-{d.getFullYear()} */}\n                </div>\n                <div id=\"bar\"></div>\n                <div style={{ width: \"90px\", display: \"flex\" }}>\n                  <FontAwesomeIcon icon={faClock}></FontAwesomeIcon>\n                  <div>{this.state.curTime}</div>\n                </div>\n              </div>\n            </div>\n            <Divider></Divider>\n            {this.state.loading ? (\n              <Skeleton active></Skeleton>\n            ) : (\n              <>\n                <TableContent\n                  id=\"displayTable\"\n                  columns={this.state.columns}\n                  data={this.state.data}\n                ></TableContent>\n\n                <div className=\"my_tablefooter\">\n                  <div className=\"ownership_info\">\n                    <OwnershipDisplay\n                      type=\"owner\"\n                      owner={this.state.owner}\n                    ></OwnershipDisplay>\n                    <OwnershipDisplay\n                      type=\"viewer\"\n                      viewers={this.state.viewers}\n                    ></OwnershipDisplay>\n                    <OwnershipDisplay\n                      type=\"editor\"\n                      editors={this.state.editors}\n                    ></OwnershipDisplay>\n                  </div>\n                  <div className=\"option_aval\">\n                    <SubjectModal history={this.props.history}></SubjectModal>\n                    <Link to={`/editTable/${this.state.tableId}`}>\n                      <div className=\"edit_btn\">\n                        <MyButton\n                          text=\"Edit\"\n                          style={{ borderRadius: \"10px\" }}\n                        ></MyButton>\n                      </div>\n                    </Link>\n                  </div>\n                </div>\n              </>\n            )}\n          </>\n        ) : (\n          <div className=\"inaccessibe_wrapper\">\n            <div className=\"oops\">Oops!</div>\n            <div className=\"inaccess_header\">\n              This table is inaccessible to you\n            </div>\n            <div>Make an access request to the owner of this table</div>\n            <Button\n              style={{\n                textAlign: \"center\",\n                marginTop: \"25px\",\n                backgroundColor: \"black\",\n                color: \"white\",\n                fontSize: \"1.1em\",\n                fontWeight: \"bold\",\n                borderRadius: \"10px\",\n                border: \"1px solid black\",\n              }}\n              disabled={this.state.isButtonDisabled}\n              loading={this.state.makeRequestLoading}\n              className=\"access_button\"\n              onClick={this.handleMakeRequest}\n            >\n              Make Request\n            </Button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default MyTables;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Content/content.js",["211"],"import React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport \"./content.css\";\nclass TableContent extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <Table\n        columns={this.props.columns}\n        dataSource={this.props.data}\n        theme=\"dark\"\n        id=\"display_table\"\n      ></Table>\n    );\n  }\n}\nexport default TableContent;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/AddTable.js",["212","213","214","215","216","217","218"],"import React, { Component } from \"react\";\nimport { Steps, Input, Form, Button, Space, message } from \"antd\";\nimport MyInput from \"../../Components/Input/MyInput\";\nimport CompleteTable from \"./CompleteTable\";\nimport ConfigureSubjects from \"./ConfigureSubjects\";\nimport ConfigureTable from \"./ConfigureTable.js\";\nimport SelectSlots from \"./SelectSlots.js\";\nimport \"./AddTable.css\";\n\nconst { Step } = Steps;\n\nconst steps = [\n  {\n    title: \"Configure Table\",\n  },\n  {\n    title: \"Configure Subjects\",\n  },\n  {\n    title: \"Select Time Slots For Lectures\",\n  },\n  {\n    title: \"Complete Table\",\n  },\n];\n\nclass AddTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 0,\n      numberOfPeriods: 0,\n      table_name: null,\n      numberOfSub: 0,\n      subInfo: null,\n      lec_slot: null,\n    };\n    this.next = this.next.bind(this);\n    this.prev = this.prev.bind(this);\n    this.configTableChange = this.configTableChange.bind(this);\n    this.setSubInfo = this.setSubInfo.bind(this);\n    this.setLectureSlots = this.setLectureSlots.bind(this);\n  }\n  setLectureSlots(values) {\n    console.log(values);\n    this.setState({\n      ...this.state,\n      lec_slot: values,\n    });\n  }\n  setSubInfo(values) {\n    this.setState({\n      ...this.state,\n      subInfo: values,\n    });\n  }\n  configTableChange(values) {\n    console.log(\"Success:\", values);\n    this.setState({\n      numberOfPeriods: values.numberOfPeriods,\n      numberOfSub: values.numberOfSub,\n      table_name: values.table_name,\n    });\n  }\n  next() {\n    this.setState({ ...this.state, current: this.state.current + 1 });\n  }\n  prev() {\n    this.setState({ ...this.state, current: this.state.current - 1 });\n  }\n  redirectToHome = () => {\n    this.props.history.push(\"/allTables\");\n  };\n  render() {\n    const current = this.state.current;\n    switch (current) {\n      case 0:\n        return (\n          <div className=\"add_wrapper\">\n            <Steps current={this.state.current}>\n              {steps.map((item) => (\n                <Step key={item.title} title={item.title} />\n              ))}\n            </Steps>\n            <ConfigureTable\n              next={this.next}\n              configTableChange={this.configTableChange}\n            ></ConfigureTable>\n          </div>\n        );\n      case 1:\n        return (\n          <div className=\"add_wrapper\">\n            <Steps current={this.state.current}>\n              {steps.map((item) => (\n                <Step key={item.title} title={item.title} />\n              ))}\n            </Steps>\n            <ConfigureSubjects\n              next={this.next}\n              prev={this.prev}\n              numberOfSub={this.state.numberOfSub}\n              setSubInfo={this.setSubInfo}\n            ></ConfigureSubjects>\n          </div>\n        );\n      case 2:\n        return (\n          <div className=\"add_wrapper\">\n            <Steps current={this.state.current}>\n              {steps.map((item) => (\n                <Step key={item.title} title={item.title} />\n              ))}\n            </Steps>\n            <SelectSlots\n              numberOfPeriods={this.state.numberOfPeriods}\n              setLectureSlots={this.setLectureSlots}\n              next={this.next}\n              prev={this.prev}\n            ></SelectSlots>\n          </div>\n        );\n      case 3:\n        return (\n          <div className=\"add_wrapper\">\n            <Steps current={this.state.current}>\n              {steps.map((item) => (\n                <Step key={item.title} title={item.title} />\n              ))}\n            </Steps>\n            <CompleteTable\n              redirectToHome={this.redirectToHome}\n              tableinfo={this.state}\n              next={this.next}\n              prev={this.prev}\n            ></CompleteTable>\n          </div>\n        );\n    }\n  }\n}\n\nexport default AddTable;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/CompleteTable.js",["219","220","221","222"],"import React, { Component } from \"react\";\nimport { Table, Select, Button, message } from \"antd\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor\";\nimport axios from \"axios\";\nconst { Option } = Select;\nconst days = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\nconst dateToFormat = \"dd/mm/yyyy\";\nclass CompleteTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      btnLoading: false,\n      completeDetails: {\n        Monday: {},\n        Tuesday: {},\n        Wednesday: {},\n        Thursday: {},\n        Friday: {},\n        Saturday: {},\n        Sunday: {},\n      },\n    };\n  }\n  createMenuOption = () => {\n    let options = [];\n    const subs = this.props.tableinfo;\n    for (let i = 1; i <= subs.numberOfSub; ++i) {\n      let temp = {};\n      temp[`Sub_${i}_Name`] = subs.subInfo[`Sub_${i}_Name`];\n      temp[`Sub_${i}_Teacher`] = subs.subInfo[`Sub_${i}_Teacher`];\n      options.push(temp);\n    }\n    return options;\n  };\n  createData = () => {\n    let data = [];\n    let periods = this.props.tableinfo.numberOfPeriods;\n    for (let i = 0; i < 7; ++i) {\n      let row = [];\n      row[\"key\"] = i + 1;\n      row[\"Day\"] = days[i];\n      for (let j = 0; j < periods; ++j) {\n        row[`Lecture_${j + 1}_Slot`] = i;\n      }\n      data.push(row);\n    }\n    return data;\n  };\n  handleSelectChange = (details) => {\n    const x = details.split(\"'__'\");\n    var sub = x[0];\n    var day = x[1];\n    var slot = x[2];\n    this.setState((prevState) => {\n      const setObj = prevState.completeDetails;\n      if (setObj) {\n        setObj[days[day]][slot] = sub;\n      }\n      console.log(setObj);\n      return {\n        ...prevState,\n        completeDetails: setObj,\n      };\n    });\n  };\n  createColumns = () => {\n    let columns = [];\n    columns.push({\n      title: \"Day\",\n      dataIndex: \"Day\",\n      key: \"Day\",\n      render: (day) => {\n        return <div style={{ fontWeight: 700 }}>{day}</div>;\n      },\n    });\n    for (let i = 1; i <= this.props.tableinfo.numberOfPeriods; ++i) {\n      var s = `Lecture_${i}_Slot`;\n      let timeSlots = this.props.tableinfo.lec_slot;\n      let slot;\n      for (var prop in timeSlots) {\n        if (s == prop) {\n          slot = timeSlots[prop];\n        }\n      }\n\n      let tit = `${slot[0].format(\"hh:mm\")} - ${slot[1].format(\"hh:mm\")}`;\n      let subjects = this.createMenuOption();\n      columns.push({\n        title: tit,\n        dataIndex: s,\n        key: s,\n        render: (row) => {\n          return (\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"Select a subject\"\n              optionFilterProp=\"children\"\n              onChange={this.handleSelectChange}\n            >\n              {subjects.map((sub, index) => {\n                const str = sub[`Sub_${index + 1}_Name`];\n\n                return (\n                  <Option key={index} value={`${str}'__'${row}'__'${i}`}>\n                    {str}\n                  </Option>\n                );\n              })}\n              <Option value={`Break'__'${row}'__'${i}`}>Break</Option>\n              <Option value={`NA'__'${row}'__'${i}`}>---</Option>\n            </Select>\n          );\n        },\n      });\n    }\n    return columns;\n  };\n  onCreateClick = () => {\n    this.setState({ ...this.state, btnLoading: true });\n    const { table_name, lec_slot } = this.props.tableinfo;\n    var result = {};\n    result[\"tableName\"] = table_name;\n    var periods = [];\n    for (var slot in lec_slot) {\n      if (lec_slot.hasOwnProperty(slot)) {\n        var temp = {};\n        temp[\"1\"] = `${lec_slot[slot][0].format(\"hh:mm\")}-${lec_slot[\n          slot\n        ][1].format(\"hh:mm\")}`;\n\n        periods.push(temp);\n      }\n    }\n    result[\"periods\"] = periods;\n    console.log(this.state.completeDetails);\n    var table = [];\n    for (var day in this.state.completeDetails) {\n      if (this.state.completeDetails.hasOwnProperty(day)) {\n        var temp = {};\n        temp[\"day\"] = day;\n        temp[\"schedule\"] = this.state.completeDetails[day];\n        table.push(temp);\n      }\n    }\n    result[\"table\"] = table;\n\n    let subjects = {};\n    subjects[\"numberOfSub\"] = this.props.tableinfo.numberOfSub;\n    subjects[\"subInfo\"] = this.props.tableinfo.subInfo;\n    result[\"subjects\"] = subjects;\n    console.log(result);\n    setTimeout(() => {\n      axiosInstance\n        .post(\"/table\", result)\n        .then((res) => {\n          message.success(\"Table created successfully\");\n          this.setState({ ...this.state, btnLoading: false }, () => {\n            this.props.redirectToHome();\n          });\n        })\n        .catch((err) => {\n          this.setState({ ...this.state, btnLoading: false });\n          message.warn(err.message);\n          console.log(err);\n        });\n    }, 2000);\n  };\n  render() {\n    const columns = this.createColumns();\n    const data = this.createData();\n    console.log(this.props);\n    return (\n      <div className=\"input_wrapper\">\n        <Table\n          columns={columns}\n          dataSource={data}\n          style={{\n            overflowX: \"scroll\",\n          }}\n        ></Table>\n        <div\n          style={{\n            marginTop: \"20px\",\n            textAlign: \"right\",\n          }}\n        >\n          <Button htmlType=\"button\" onClick={this.props.prev}>\n            Previous\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={this.state.btnLoading}\n            onClick={() => {\n              this.onCreateClick();\n            }}\n            style={{\n              marginLeft: \"10px\",\n            }}\n          >\n            Create\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CompleteTable;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/ConfigureSubjects.js",[],"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/ConfigureTable.js",["223"],"import React, { Component } from \"react\";\nimport { Input, Form, Button, Space, InputNumber } from \"antd\";\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nclass CompleteTable extends Component {\n  constructor(props) {\n    super(props);\n    this.onFinish = this.onFinish.bind(this);\n  }\n  onFinish(values) {\n    this.props.next();\n    this.props.configTableChange(values);\n  }\n  onFinishFailed(errorInfo) {\n    console.log(\"Failed:\", errorInfo);\n  }\n  render() {\n    return (\n      <div className=\"input_wrapper\">\n        <Form\n          {...layout}\n          name=\"basic\"\n          onFinish={this.onFinish}\n          onFinishFailed={this.onFinishFailed}\n        >\n          <Form.Item\n            label=\"Lectures in a day\"\n            name=\"numberOfPeriods\"\n            rules={[\n              {\n                required: true,\n                message: \"Please Select number of periods/Lectures in a day\",\n              },\n            ]}\n          >\n            <InputNumber\n              min={1}\n              max={100}\n              style={{\n                width: \"100%\",\n              }}\n              placeholder=\"Number of lectures in a day\"\n            ></InputNumber>\n            {/* <Input\n              required={true}\n              placeholder=\"Number of lectures in a day\"\n            ></Input> */}\n          </Form.Item>\n          <Form.Item\n            label=\"Table Name\"\n            name=\"table_name\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input the table name\",\n              },\n            ]}\n          >\n            <Input placeholder=\"Table Name\"></Input>\n          </Form.Item>\n          <Form.Item\n            label=\"Number of Subjects\"\n            name=\"numberOfSub\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input number of subjects\",\n              },\n            ]}\n          >\n            <InputNumber\n              min={1}\n              max={100}\n              style={{\n                width: \"100%\",\n              }}\n              placeholder=\"Number of subjects\"\n            ></InputNumber>\n          </Form.Item>\n          <Form.Item style={{ justifyContent: \"flex-end\" }}>\n            <Button htmlType=\"button\">Cancel</Button>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              style={{\n                marginLeft: \"10px\",\n              }}\n            >\n              Next\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\nexport default CompleteTable;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/SelectSlots.js",["224"],"import React, { Component } from \"react\";\nimport { TimePicker, Form, Input, Button } from \"antd\";\n\nconst { RangePicker } = TimePicker;\n\nclass SelectSlots extends Component {\n  constructor(props) {\n    super(props);\n    this.onFinish = this.onFinish.bind(this);\n  }\n  onFinish(values) {\n    console.log(values);\n    this.props.setLectureSlots(values);\n    this.props.next();\n  }\n  render() {\n    console.log(this.props);\n    const formItems = () => {\n      let items = [];\n      for (var i = 1; i <= this.props.numberOfPeriods; ++i) {\n        items.push(\n          <Form.Item\n            label={`Lecture ${i} Slot`}\n            name={`Lecture_${i}_Slot`}\n            rules={[\n              {\n                required: true,\n                message: \"Please Select Time Slot\",\n              },\n            ]}\n            style={{ width: \"100%\" }}\n          >\n            <RangePicker></RangePicker>\n          </Form.Item>\n        );\n      }\n      return items;\n    };\n    return (\n      <div className=\"input_wrapper\">\n        <Form\n          name=\"basic\"\n          onFinish={this.onFinish}\n          onFinishFailed={this.onFinishFailed}\n        >\n          {formItems().map((jsxel) => {\n            return jsxel;\n          })}\n          <Form.Item style={{ textAlign: \"right\" }}>\n            <Button htmlType=\"button\" onClick={this.props.prev}>\n              Previous\n            </Button>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              style={{\n                marginLeft: \"10px\",\n              }}\n            >\n              Next\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\nexport default SelectSlots;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/utils/axiosInterceptor.js",[],"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Spinner/Spinner.js",[],"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AllTables/AllTables.js",["225","226"],"import React, { Component } from \"react\";\r\nimport { Row, Col, Skeleton, message, Tooltip, Divider, Modal } from \"antd\";\r\nimport { axiosInstance } from \"../../utils/axiosInterceptor.js\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DelTable from \"./DelTable\";\r\nimport \"./AllTables.css\";\r\n\r\nconst Card = (props) => {\r\n  console.log(props);\r\n  let creationDate;\r\n  if (props.createdAt) {\r\n    console.log(props.createdAt.split(\"T\"));\r\n    creationDate = props.createdAt.split(\"T\")[0];\r\n  }\r\n  let updateDate;\r\n  if (props.updatedAt) {\r\n    updateDate = props.updatedAt.split(\"T\")[0];\r\n  }\r\n  return (\r\n    <div className=\"table_card\">\r\n      <div className=\"table_card_name\">\r\n        <div></div>\r\n        <div>{props.tableName}</div>\r\n\r\n        <DelTable table={props}></DelTable>\r\n      </div>\r\n      <div className=\"option_table\">\r\n        <Link to={`/tables/${props.tableId}`}>\r\n          <div className=\"view \">View</div>\r\n        </Link>\r\n        <Link to={`/editTable/${props.tableId}`}>\r\n          <div className=\"update\">Update</div>\r\n        </Link>\r\n      </div>\r\n      <div className=\"table_card_dates\">\r\n        <Tooltip title={props.createdAt}>\r\n          <div>Created On : {creationDate}</div>\r\n        </Tooltip>\r\n\r\n        <Tooltip title={props.updatedAt} placement=\"bottom\">\r\n          <div>updated On : {updateDate}</div>\r\n        </Tooltip>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nclass AllTables extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      tables: null,\r\n    };\r\n    this.fetchAllTables = this.fetchAllTables.bind(this);\r\n  }\r\n  fetchAllTables() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axiosInstance\r\n      .get(\"/table\")\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          ...this.state,\r\n          tables: res.data.results,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          ...this.state,\r\n          loading: false,\r\n        });\r\n        console.log(err);\r\n        message.warn(err.message);\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.fetchAllTables();\r\n  }\r\n  render() {\r\n    console.log(this.props.history);\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"all_header\">Tables</div>\r\n        <Divider></Divider>\r\n        {!this.state.loading ? (\r\n          <Row gutter={[16, 24]}>\r\n            <Col md={8} sm={12} xs={24}>\r\n              <div className=\"table_card addTable\">\r\n                <Tooltip title=\"Add Tables\">\r\n                  <Link to=\"/addTable\">\r\n                    <div id=\"dots\">\r\n                      <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\r\n                    </div>\r\n                  </Link>\r\n                </Tooltip>\r\n              </div>\r\n            </Col>\r\n            {this.state.tables\r\n              ? this.state.tables.map((table) => {\r\n                  return (\r\n                    <Col md={8} sm={12} xs={24}>\r\n                      <Card\r\n                        tableName={table.tableName}\r\n                        createdAt={table.createdAt}\r\n                        updatedAt={table.updatedAt}\r\n                        tableId={table._id}\r\n                        fetchAllTables={this.fetchAllTables}\r\n                      ></Card>\r\n                    </Col>\r\n                  );\r\n                })\r\n              : null}\r\n          </Row>\r\n        ) : (\r\n          <Skeleton ative></Skeleton>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AllTables;\r\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AllTables/DelTable.js",["227"],"import React, { Component } from \"react\";\nimport { Modal, Tooltip, Button, message } from \"antd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { fas, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor.js\";\nimport \"./AllTables.css\";\nclass DelTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.deleteTable = this.deleteTable.bind(this);\n  }\n  handleCancel() {\n    this.setState({\n      ...this.state,\n      isOpen: false,\n      btnLoading: false,\n    });\n  }\n  deleteTable() {\n    this.setState({ ...this.state, btnLoading: true });\n    setTimeout(() => {\n      axiosInstance\n        .delete(`/table/${this.props.table.tableId}`)\n        .then((res) => {\n          console.log(res);\n          message.success(\"Table deleted successfully\");\n          this.setState(\n            { ...this.state, btnLoading: false, isOpen: false },\n            () => {\n              this.props.table.fetchAllTables();\n            }\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n          this.setState({ ...this.state, btnLoading: false, isOpen: false });\n          message.warn(err.message);\n        });\n    }, 2000);\n  }\n  render() {\n    return (\n      <>\n        <div>\n          <Modal\n            visible={this.state.isOpen}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            footer={[]}\n          >\n            <div className=\"modalContent\">\n              <div className=\"header\">\n                Do you really want to delete {this.props.table.tableName}?\n              </div>\n              <div className=\"footer\">\n                <Button\n                  style={{\n                    justifyContent: \"center\",\n                    backgroundColor: \"white\",\n                    borderColor: \"#f05454\",\n                    color: \"#f05454\",\n                    fontWeight: 600,\n                    textAlign: \"center\",\n                    borderRadius: \"10px\",\n                    marginRight: \"10px\",\n                  }}\n                  onClick={this.handleCancel}\n                >\n                  Cancel\n                </Button>\n\n                <Button\n                  style={{\n                    justifyContent: \"center\",\n                    backgroundColor: \"#f05454\",\n                    borderColor: \"#f05454\",\n                    color: \"#fff\",\n                    fontWeight: 600,\n                    textAlign: \"center\",\n                    borderRadius: \"10px\",\n                  }}\n                  loading={this.state.btnLoading}\n                  onClick={this.deleteTable}\n                >\n                  Delete\n                </Button>\n              </div>\n            </div>\n          </Modal>\n          <Tooltip title=\"Delete Table\" placement=\"bottom\">\n            <FontAwesomeIcon\n              icon={faTrash}\n              onClick={() => {\n                this.setState({ ...this.state, isOpen: true });\n              }}\n            ></FontAwesomeIcon>\n          </Tooltip>\n        </div>\n      </>\n    );\n  }\n}\nexport default DelTable;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/EditTable/EditTable.js",["228","229","230","231","232"],"import React, { Component } from \"react\";\r\nimport { axiosInstance } from \"../../utils/axiosInterceptor\";\r\nimport { Button, message, Skeleton, Select } from \"antd\";\r\nimport TableContent from \"../../Components/Content/content\";\r\nimport \"./EditTable.css\";\r\nimport axios from \"axios\";\r\nconst { Option } = Select;\r\nvar days = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n  \"Sunday\",\r\n];\r\nclass EditTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAccessible: false,\r\n      loading: false,\r\n      tableName: null,\r\n      columns: null,\r\n      data: null,\r\n      subjects: null,\r\n      isActive: false,\r\n      loading: false,\r\n      btnLoading: false,\r\n      finalData: {},\r\n      makeRequestLoading: false,\r\n    };\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.saveNewChanges = this.saveNewChanges.bind(this);\r\n    this.handleMakeRequest = this.handleMakeRequest.bind(this);\r\n  }\r\n  fetchSubjectDetails() {\r\n    const tableId = this.props.history.location.pathname.split(\"/\")[2];\r\n    this.setState({ ...this.state, loading: true });\r\n    axiosInstance\r\n      .get(`/table/${tableId}/subjects`)\r\n      .then((sub) => {\r\n        this.setState({ ...this.state, loading: false, subjects: sub.data });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ ...this.state, loading: false });\r\n        console.log(err);\r\n        if (err.message) {\r\n          message.warn(err.message);\r\n        }\r\n      });\r\n  }\r\n  verifyEditAvilabe() {\r\n    var tableId = this.props.history.location.pathname.split(\"/\")[2];\r\n    axiosInstance\r\n      .get(`/access/editAccess/?table=${tableId}`)\r\n      .then((res) => {\r\n        this.setState({\r\n          ...this.state,\r\n          isAccessible: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          ...this.state,\r\n          isAccessible: false,\r\n        });\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.verifyEditAvilabe();\r\n    this.fetchTableDetails();\r\n    this.fetchSubjectDetails();\r\n  }\r\n  onSelectChange(event) {\r\n    let change = this.state.finalData;\r\n    let x = event.split(\"'__'\");\r\n    let new_sub = x[0];\r\n    let col = x[1];\r\n    let day = x[2];\r\n\r\n    if (change.hasOwnProperty(day)) {\r\n      change[day][col] = new_sub;\r\n    } else {\r\n      change[day] = {};\r\n      change[day][col] = new_sub;\r\n    }\r\n    console.log(change);\r\n    this.setState({\r\n      ...this.state,\r\n      finalData: change,\r\n    });\r\n  }\r\n  saveNewChanges() {\r\n    const tableId = this.props.history.location.pathname.split(\"/\")[2];\r\n    let update = this.state.finalData;\r\n    update[\"tableName\"] = this.state.tableName;\r\n    console.log(update);\r\n    this.setState({ ...this.state, btnLoading: true });\r\n\r\n    axiosInstance\r\n      .put(`/table/${tableId}`, update)\r\n      .then((res) => {\r\n        message.success(\"Table update successfully\");\r\n        this.setState({ ...this.state, btnLoading: false }, () => {\r\n          this.props.history.push(`/tables/${tableId}`);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ ...this.state, btnLoading: false });\r\n        message.warn(err.message);\r\n      });\r\n  }\r\n  createColumns(periods) {\r\n    var columns = [];\r\n    let dayCol = {\r\n      title: \"Day\",\r\n      dataIndex: \"Day\",\r\n      key: \"Day\",\r\n      render: (day) => {\r\n        return <div style={{ fontWeight: 700 }}>{day}</div>;\r\n      },\r\n    };\r\n    columns.push(dayCol);\r\n\r\n    periods.map((period, index) => {\r\n      let temp = {};\r\n      temp[\"title\"] = period[1];\r\n      temp[\"dataIndex\"] = `Day`;\r\n      temp[\"dataIndex\"] = index + 1;\r\n      temp[\"key\"] = index + 1;\r\n      temp[\"render\"] = (subject) => {\r\n        if (subject) {\r\n          let x = subject.split(\"'__'\");\r\n          return (\r\n            <Select\r\n              onChange={this.onSelectChange}\r\n              style={{ width: \"100%\" }}\r\n              defaultValue={x[0]}\r\n            >\r\n              {this.state.subjects.subjects.map((sub) => {\r\n                return (\r\n                  <Option\r\n                    key={sub.name}\r\n                    value={`${sub.name}'__'${index + 1}'__'${x[1]}`}\r\n                  >\r\n                    {sub.name}\r\n                  </Option>\r\n                );\r\n              })}\r\n              <Option key={`Break'__'${index + 1}'__'${x[1]}`}>Break</Option>\r\n              <Option key={`NA'__'${index + 1}'__'${x[1]}`}>---</Option>\r\n            </Select>\r\n          );\r\n        }\r\n      };\r\n      columns.push(temp);\r\n    });\r\n    this.setState({\r\n      ...this.state,\r\n      columns: columns,\r\n    });\r\n  }\r\n  createData(data) {\r\n    var tabledata = [];\r\n    data.map((row, index) => {\r\n      var temp = {};\r\n      temp[\"key\"] = index;\r\n      temp[\"Day\"] = row.day;\r\n      var setsch = {};\r\n      console.log(row.schedule);\r\n      for (var key in Object.keys(row.schedule)) {\r\n        const k = Number(key) + 1;\r\n        if (row.schedule.hasOwnProperty(k)) {\r\n          setsch[k] = `${row.schedule[k]}'__'${row.day}`;\r\n        }\r\n      }\r\n      let merged = { ...temp, ...setsch };\r\n      console.log(merged);\r\n      tabledata.push(merged);\r\n    });\r\n    this.setState({\r\n      ...this.state,\r\n      data: tabledata,\r\n    });\r\n  }\r\n  fetchTableDetails = () => {\r\n    const tableId = this.props.history.location.pathname.split(\"/\")[2];\r\n    this.setState({ ...this.state, loading: true });\r\n    setTimeout(() => {\r\n      axiosInstance\r\n        .get(`/table/${tableId}`)\r\n        .then((table) => {\r\n          this.createColumns(table.data.periods);\r\n          this.createData(table.data.table);\r\n          this.setState({\r\n            ...this.state,\r\n            tableName: table.data.tableName,\r\n            tableId: tableId,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          if (err.message) {\r\n            message.warn(err.message);\r\n          }\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n          });\r\n        });\r\n    }, 1000);\r\n  };\r\n\r\n  handleMakeRequest() {\r\n    const tableId = this.props.history.location.pathname.split(\"/\")[2];\r\n    this.setState({\r\n      ...this.state,\r\n      makeRequestLoading: true,\r\n    });\r\n\r\n    axiosInstance\r\n      .post(`https://localhost:3433/access/accessRequest/${tableId}`, {\r\n        access_request: \"Edit\",\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        message.success(\"Request sent successfully!\");\r\n        this.setState({\r\n          ...this.state,\r\n          makeRequestLoading: false,\r\n          isButtonDisabled: true,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          ...this.state,\r\n          makeRequestLoading: false,\r\n        });\r\n        message.warn(\"Failed to make access request\");\r\n        if (err.message) {\r\n          console.log(err.message);\r\n        }\r\n      });\r\n  }\r\n  render() {\r\n    if (this.state.isAccessible) {\r\n      return (\r\n        <div className=\"edit_table_wrapper\">\r\n          {!this.state.loading && this.state.columns && this.state.data ? (\r\n            <>\r\n              <div className=\"content_header active\">\r\n                <input\r\n                  type=\"text\"\r\n                  className={\r\n                    this.state.isActive ? \"table_inp_active\" : \"table_inp\"\r\n                  }\r\n                  value={this.state.tableName}\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      ...this.state,\r\n                      tableName: e.target.value,\r\n                    });\r\n                  }}\r\n                  onFocus={() => {\r\n                    this.setState({\r\n                      ...this.state,\r\n                      isActive: true,\r\n                    });\r\n                  }}\r\n                  onBlur={() => {\r\n                    this.setState({\r\n                      ...this.state,\r\n                      isActive: false,\r\n                    });\r\n                  }}\r\n                ></input>\r\n              </div>\r\n              <div>\r\n                <TableContent\r\n                  columns={this.state.columns}\r\n                  data={this.state.data}\r\n                ></TableContent>\r\n              </div>\r\n              <div className=\"edit_footer\">\r\n                <div className=\"action_btns\">\r\n                  <Button\r\n                    style={{\r\n                      backgroundColor: \"white\",\r\n                      color: \"#f05454\",\r\n                      border: \"1px solid #f05454\",\r\n                      marginLeft: \"5px\",\r\n                      borderRadius: \"10px\",\r\n                      fontWeight: 600,\r\n                      loading: false,\r\n                    }}\r\n                    onClick={() => {\r\n                      const tableId = this.props.history.location.pathname.split(\r\n                        \"/\"\r\n                      )[2];\r\n                      this.props.history.push(`/tables/${tableId}`);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    style={{\r\n                      backgroundColor: \"#f05454\",\r\n                      color: \"white\",\r\n                      border: \"1px solid #f05454\",\r\n                      marginLeft: \"5px\",\r\n                      borderRadius: \"10px\",\r\n                      fontWeight: 600,\r\n                    }}\r\n                    loading={this.state.btnLoading}\r\n                    onClick={this.saveNewChanges}\r\n                  >\r\n                    Save Changes\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <Skeleton active></Skeleton>\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"inaccessibe_wrapper\">\r\n          {!this.state.makeRequestLoading ? (\r\n            <>\r\n              <div className=\"oops\">Oops!</div>\r\n              <div className=\"inaccess_header\">\r\n                Edit access for this table is not available to you\r\n              </div>\r\n              <div>Make an edit access request to the owner of this table</div>\r\n              <Button\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  marginTop: \"25px\",\r\n                  backgroundColor: \"black\",\r\n                  color: \"white\",\r\n                  fontSize: \"1.1em\",\r\n                  fontWeight: \"bold\",\r\n                  borderRadius: \"10px\",\r\n                  border: \"1px solid black\",\r\n                }}\r\n                disabled={this.state.isButtonDisabled}\r\n                loading={this.state.makeRequestLoading}\r\n                className=\"access_button\"\r\n                onClick={this.handleMakeRequest}\r\n              >\r\n                Make Request\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <Skeleton></Skeleton>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default EditTable;\r\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/MyTables/SubjectModal.js",["233"],"import React, { Component } from \"react\";\nimport { Modal, message, Skeleton, Divider } from \"antd\";\nimport MyButton from \"../../Components/MyButton/MyButton\";\nimport \"./MyTables.css\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor.js\";\n\nclass SubjectModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalVisible: false,\n      loading: false,\n      subjectData: null,\n    };\n    this.fetchSubjectDetails = this.fetchSubjectDetails.bind(this);\n  }\n  fetchSubjectDetails() {\n    this.setState({\n      ...this.state,\n      loading: true,\n    });\n    const tableId = this.props.history.location.pathname.split(\"/\")[2];\n\n    axiosInstance\n      .get(`/table/${tableId}/subjects`)\n      .then((res) => {\n        this.setState({\n          ...this.state,\n          loading: false,\n          subjectData: res.data,\n        });\n      })\n      .catch((err) => {\n        message.warn(err.message);\n        this.setState({\n          ...this.state,\n          loading: false,\n        });\n      });\n  }\n  render() {\n    return (\n      <>\n        <div className=\"subject_btn\">\n          <Modal\n            visible={this.state.isModalVisible}\n            onCancel={() => {\n              this.setState({\n                ...this.state,\n                isModalVisible: false,\n              });\n            }}\n            style={{\n              height: \"20vh\",\n            }}\n            footer={[]}\n          >\n            <div className=\"sub_modal\">\n              {this.state.subjectData && !this.state.loading ? (\n                <>\n                  <div className=\"sub_modal_header\">\n                    <h1>Subjects</h1>\n                  </div>\n\n                  <div className=\"sub_modal_content\">\n                    {/* <div className=\"particular_sub_header\">\n                      <div>Subject Name</div>\n                      <div>Teacher Name</div>\n                    </div> */}\n                    <div className=\"particular_subname_header\">\n                      <div className=\"header_subname\">\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            fontSize: \"16px\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                          Subject Name\n                        </div>\n                        <div\n                          style={{\n                            textAlign: \"center\",\n                            fontWeight: \"600\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Teacher Name\n                        </div>\n                      </div>\n                      <div className=\"content_subname\">\n                        {this.state.subjectData.subjects.map((subject) => {\n                          return (\n                            <div className=\"particular_sub\">\n                              <div>{subject.name}</div>\n                              <div>{subject.teacher}</div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                    {/* <div className=\"particular_subteacher_header\">\n                      <div style={{ fontWeight: \"600\", fontSize: \"16px\" }}>\n                        Teacher Name\n                      </div>\n                      {this.state.subjectData.subjects.map((subject) => {\n                        return (\n                          <div className=\"particular_subteacher\">\n                            <div>{subject.teacher}</div>\n                          </div>\n                        );\n                      })}\n                    </div> */}\n                  </div>\n                </>\n              ) : (\n                <Skeleton active></Skeleton>\n              )}\n            </div>\n          </Modal>\n          <MyButton\n            onClick={() => {\n              this.setState(\n                {\n                  ...this.state,\n                  isModalVisible: true,\n                },\n                () => {\n                  this.fetchSubjectDetails();\n                }\n              );\n            }}\n            text=\"Subjects\"\n            style={{\n              borderRadius: \"10px\",\n              width: \"100px\",\n              marginRight: \"10px\",\n              marginTop: \"19px\",\n            }}\n          ></MyButton>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SubjectModal;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/UseDisplay/UserDisplay.js",["234"],"import React, { Component } from \"react\";\r\nimport { Popover, Avatar, Image } from \"antd\";\r\nimport { axiosInstance } from \"../../utils/axiosInterceptor.js\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, message } from \"antd\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport \"./UserDisplay.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UserDisplay extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      userData: null,\r\n    };\r\n    this.fetchUserDetails = this.fetchUserDetails.bind(this);\r\n  }\r\n  fetchUserDetails() {\r\n    this.setState({\r\n      ...this.state,\r\n      loading: true,\r\n    });\r\n    setTimeout(() => {\r\n      axiosInstance\r\n        .get(\"/users\")\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            userData: res.data,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.message);\r\n          message.warn(err.message);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n          });\r\n        });\r\n    }, 3000);\r\n  }\r\n  componentDidMount() {\r\n    this.fetchUserDetails();\r\n  }\r\n  content = () => {\r\n    if (this.state.loading) {\r\n      return <Spinner></Spinner>;\r\n    } else if (this.state.userData) {\r\n      return (\r\n        <div className=\"view_profile\">\r\n          <div className=\"profile_header\">\r\n            <Avatar\r\n              size={40}\r\n              src={\r\n                <Image\r\n                  src={\r\n                    this.state.userData &&\r\n                    this.state.userData.hasOwnProperty(\"profilePic\") &&\r\n                    this.state.userData.profilePic ? (\r\n                      `https://localhost:3433/${this.state.userData.profilePic}`\r\n                    ) : (\r\n                      <>H</>\r\n                    )\r\n                  }\r\n                ></Image>\r\n              }\r\n            ></Avatar>\r\n            <div className=\"user_name_view\">{this.state.userData.username}</div>\r\n          </div>\r\n          <Link to={`/viewUser`}>\r\n            <div className=\"view_profile_btn\"> View Profile</div>\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    console.log(this.state.userData);\r\n    const content = this.content();\r\n    return (\r\n      <Popover content={content} trigger=\"click\">\r\n        <Avatar\r\n          style={{\r\n            color: \"#f05454\",\r\n            backgroundColor: \"#f0545473\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          src={\r\n            this.state.userData &&\r\n            this.state.userData.hasOwnProperty(\"profilePic\") &&\r\n            this.state.userData.profilePic ? (\r\n              `https://localhost:3433/${this.state.userData.profilePic}`\r\n            ) : (\r\n              <FontAwesomeIcon icon={faUser}></FontAwesomeIcon>\r\n            )\r\n          }\r\n        ></Avatar>\r\n      </Popover>\r\n    );\r\n  }\r\n}\r\nexport default UserDisplay;\r\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/SignUp/SignUp.js",["235","236","237","238","239","240"],"import React, { Component } from \"react\";\nimport \"./SignUp.css\";\nimport {\n  Form,\n  Row,\n  Col,\n  Input,\n  InputNumber,\n  Select,\n  Button,\n  message,\n} from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../../assests/clockWhite.svg\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor.js\";\nimport * as EmailValidator from \"email-validator\";\nimport axios from \"axios\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 24,\n  },\n  wrapperCol: {\n    span: 24,\n  },\n};\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      btnLoading: false,\n      userName: {\n        value: \"\",\n      },\n      email: {\n        value: \"\",\n      },\n    };\n    this.onUserChange = this.onUserChange.bind(this);\n    this.onEmailChange = this.onEmailChange.bind(this);\n  }\n  validateEmail(user_email) {\n    if (EmailValidator.validate(user_email)) {\n      return {\n        validateStatus: \"success\",\n        errorMsg: null,\n      };\n    } else {\n      return {\n        validateStatus: \"error\",\n        errorMsg: \"Invalid\",\n      };\n    }\n  }\n  onEmailChange(value) {\n    const userEmail = value.target.value;\n    this.setState({\n      email: { ...this.validateEmail(value.target.value), userEmail },\n    });\n  }\n  validateUsername(user_name) {\n    if (user_name.length > 6) {\n      return {\n        validateStatus: \"success\",\n        errorMsg: null,\n      };\n    } else {\n      return {\n        validateStatus: \"error\",\n        errorMsg: \"Should be at least 6 characters long!\",\n      };\n    }\n  }\n  onUserChange(value) {\n    const userValue = value.target.value;\n    this.setState({\n      userName: { ...this.validateUsername(value.target.value), userValue },\n    });\n  }\n  onSubmit(e) {\n    console.log(this.state.userName.validateStatus);\n    if (\n      this.state.userName.validateStatus == \"success\" &&\n      this.state.email.validateStatus == \"success\"\n    ) {\n      console.log(e);\n      this.setState({ ...this.state, btnLoading: true });\n      axiosInstance\n        .post(\"/users/signup\", { ...e })\n        .then((res) => {\n          this.setState({ ...this.state, btnLoading: false }, () => {\n            console.log(res);\n            this.props.history.push(\"/\");\n            message.success(\"Successfully Signed Up\");\n          });\n        })\n        .catch((err) => {\n          var error = err.response;\n          if (error) {\n            this.setState({ ...this.state, btnLoading: false });\n            message.warn(error.data.err.message);\n          } else {\n            this.setState({ ...this.state, btnLoading: false });\n            console.log(err);\n            message.warn(err.message);\n          }\n        });\n    } else if (this.state.userName.validateStatus == \"error\") {\n      message.warn(\"Enter a valid password!\");\n    } else if (this.state.email.validateStatus == \"error\") {\n      message.warn(\"Enter a valid email!\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"signUpWrapper\">\n        <div className=\"left_content\">\n          <div className=\"logo\">\n            <img src={logo} width={60}></img>\n          </div>\n          <div id=\"left_text\">\n            <div>Real Time Tables</div>\n            <div>Time management starts here</div>\n          </div>\n          <div>Sign up to experince the change</div>\n        </div>\n        <div className=\"right_content\">\n          <Row id=\"header_signup\">\n            <Col span={24}>\n              <h1 style={{ fontWeight: \"600\" }}>Join Real Time Tables</h1>\n            </Col>\n            <Col span={24} style={{ marginTop: \"-15px\" }}>\n              <span>\n                Already have an account?{\" \"}\n                <Link to=\"/\">\n                  <u style={{ color: \" rgba(0, 0, 0, 0.685)\" }}>Login</u>\n                </Link>\n              </span>\n            </Col>\n          </Row>\n\n          <Row>\n            <Form\n              {...layout}\n              name=\"signUp\"\n              id=\"sign\"\n              colon={false}\n              autoComplete=\"off\"\n              style={{ width: \"100%\", marginTop: \"40px\" }}\n              onFinish={(e) => {\n                this.onSubmit(e);\n              }}\n            >\n              <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[{ required: true, message: \"Pl\" }]}\n              >\n                <Input autoComplete={false}></Input>\n              </Form.Item>\n              <Form.Item\n                label=\"Password(min 6 char)\"\n                name=\"password\"\n                hasFeedback\n                validateStatus={this.state.userName.validateStatus}\n                // help={this.state.userName.errorMsg}\n                rules={[\n                  { required: true, message: \"Please input your password!\" },\n                ]}\n              >\n                <Input.Password\n                  value={this.state.userName.value}\n                  onChange={this.onUserChange}\n                  autoComplete={false}\n                ></Input.Password>\n              </Form.Item>\n              <Form.Item\n                label=\"Firstname\"\n                name=\"firstname\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your firstname!\",\n                  },\n                ]}\n              >\n                <Input autoComplete={false}></Input>\n              </Form.Item>\n\n              <Form.Item name=\"lastname\" label=\"Lastname\">\n                <Input autoComplete={false}></Input>\n              </Form.Item>\n              <Form.Item\n                validateStatus={this.state.email.validateStatus}\n                // help={this.state.email.errorMsg}\n                label=\"Email Address(Enter a valid one)\"\n                name=\"email\"\n                hasFeedback\n                rules={[\n                  {\n                    required: true,\n                    message: \"Please input your emailAddress!\",\n                  },\n                ]}\n              >\n                <Input\n                  value={this.state.email.value}\n                  onChange={this.onEmailChange}\n                ></Input>\n              </Form.Item>\n\n              <Form.Item label=\"Age\" name=\"age\">\n                <InputNumber style={{ width: \"100%\" }}></InputNumber>\n              </Form.Item>\n              <Form.Item label=\"Sex\" name=\"sex\">\n                <Select style={{ width: \"100%\" }}>\n                  <Option value=\"male\">Male</Option>\n                  <Option value=\"female\">Female</Option>\n                  <Option value=\"notSay\">Rather not say</Option>\n                </Select>\n              </Form.Item>\n              <Form.Item label=\"Institution Name\" name=\"institutionName\">\n                <Input style={{ width: \"100%\" }}></Input>\n              </Form.Item>\n              <Form.Item label=\"Standard\" name=\"standard\">\n                <Input style={{ width: \"100%\" }}></Input>\n              </Form.Item>\n              <Form.Item>\n                <Button\n                  loading={this.state.btnLoading}\n                  id=\"join_btn\"\n                  htmlType=\"submit\"\n                >\n                  Join\n                </Button>\n              </Form.Item>\n            </Form>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\nexport default SignUp;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/MyTables/ShareModal.js",["241"],"import React, { Component } from \"react\";\nimport { Modal, Tooltip, Button, message } from \"antd\";\nimport { faShare, faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./MyTables.css\";\n\nclass ShareModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n    };\n  }\n  showModal = () => {\n    this.setState({\n      ...this.state,\n      visible: true,\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n  render() {\n    return (\n      <>\n        <Tooltip title=\"Share Table\" placement={\"bottom\"}>\n          <div className=\"share_btn\" onClick={this.showModal}>\n            <FontAwesomeIcon icon={faShare}></FontAwesomeIcon>\n          </div>\n        </Tooltip>\n        <Modal\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          footer={[]}\n        >\n          <div className=\"share_header\">\n            Share this table with your classmates\n          </div>\n          <div className=\"copy\">\n            <div>{this.props.pathname}</div>\n            <div id=\"copy_icon\">\n              <Tooltip placement={\"bottom\"} title=\"copy link to cliboard\">\n                <FontAwesomeIcon\n                  icon={faClipboard}\n                  onClick={() => {\n                    navigator.clipboard.writeText(this.props.pathname);\n                    message.success(\"Copied link to clipboard\");\n                  }}\n                ></FontAwesomeIcon>\n              </Tooltip>\n            </div>\n          </div>\n          <div className=\"share_footer\">\n            Share this link with anyone and ask them to send an access request,\n            approve the request to start using table collaboratively\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default ShareModal;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Notification/NotificationPopover.js",["242","243"],"import React, { Component } from \"react\";\nimport {\n  message,\n  Button,\n  Tooltip,\n  Popover,\n  Skeleton,\n  notification,\n} from \"antd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBell } from \"@fortawesome/free-solid-svg-icons\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor.js\";\nimport \"./NotificationPopover.css\";\nclass NotificationPopover extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      notifications: null,\n      loading: false,\n      grantButtonLoading: false,\n    };\n    this.giveAccess = this.giveAccess.bind(this);\n  }\n  giveAccess(user, table, access_type, notificationId) {\n    this.setState({\n      ...this.state,\n      loading: true,\n    });\n    setTimeout(() => {\n      axiosInstance\n        .post(\"/access/approveRequest\", {\n          user: user,\n          table: table,\n          access_type: access_type,\n          notification_id: notificationId,\n        })\n        .then((res) => {\n          console.log(res);\n          this.setState({\n            ...this.state,\n            loading: false,\n          });\n          message.success(\"Access given successfully!\");\n        })\n        .catch((error) => {\n          this.setState({\n            ...this.state,\n            loading: false,\n          });\n          if (error.response) {\n            // Request made and server responded\n            console.log(error.response.data);\n            message.warn(error.response.data.error);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n          } else if (error.request) {\n            // The request was made but no response was received\n            console.log(error.request);\n          } else {\n            // Something happened in setting up the request that triggered an Error\n            console.log(\"Error\", error.message);\n          }\n        });\n    }, 2000);\n  }\n  fetchNotifications() {\n    this.setState({\n      ...this.state,\n      loading: true,\n    });\n    setTimeout(() => {\n      axiosInstance\n        .get(\"/notifications\")\n        .then((res) => {\n          console.log(res.data);\n          this.setState({\n            ...this.state,\n            notifications: res.data,\n            loading: false,\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            ...this.state,\n            loading: false,\n          });\n          console.log(err);\n          if (err.message) {\n            message.warn(err.message);\n          }\n        });\n    }, 2000);\n  }\n  render() {\n    const Maincontent = () => {\n      return this.state.loading ? (\n        <Skeleton active></Skeleton>\n      ) : (\n        <div className=\"notification_wrapper\">\n          {this.state.notifications.map((notification) => {\n            return (\n              <div className=\"notification\">\n                <div className=\"message\">{notification.message}</div>\n                <div className=\"access_btn\">\n                  <Button\n                    style={{\n                      backgroundColor: \"#f05454\",\n                      borderColor: \"#f05454\",\n                      color: \"#fff\",\n                      fontWeight: \"600\",\n                      padding: \"5px\",\n                      marginRight: \"10px\",\n                      fontSize: \"12px\",\n                      borderRadius: \"10px\",\n                    }}\n                    loading={this.state.grantButtonLoading}\n                    onClick={(e) => {\n                      this.giveAccess(\n                        notification.from_user,\n                        notification.table,\n                        notification.access_request,\n                        notification._id\n                      );\n                    }}\n                  >\n                    Grant Access\n                  </Button>\n                  <Button\n                    style={{\n                      backgroundColor: \"#f05454\",\n                      borderColor: \"#f05454\",\n                      color: \"#fff\",\n                      fontWeight: \"600\",\n                      padding: \"5px\",\n                      fontSize: \"12px\",\n                      borderRadius: \"10px\",\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      );\n    };\n    return (\n      <Popover\n        trigger=\"click\"\n        content={() => {\n          return (\n            <Maincontent\n              loading={this.state.loading}\n              notifications={this.state.notifications}\n            ></Maincontent>\n          );\n        }}\n        title=\"Notifications\"\n      >\n        <FontAwesomeIcon\n          icon={faBell}\n          onClick={() => {\n            console.log(\"x\");\n            this.fetchNotifications();\n          }}\n        ></FontAwesomeIcon>\n      </Popover>\n    );\n  }\n}\nexport default NotificationPopover;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/ViewUser/viewUser.js",["244","245"],"import React, { Component } from \"react\";\r\nimport { Skeleton, message, Avatar, Image, Button, Modal } from \"antd\";\r\nimport \"./viewUser.css\";\r\nimport { axiosInstance } from \"../../utils/axiosInterceptor\";\r\nimport { UserOutlined, EditFilled } from \"@ant-design/icons\";\r\nimport EditProfile from \"./EditProfileModal\";\r\nimport UploadModal from \"./uploadModal.js\";\r\nclass ViewUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      userData: null,\r\n      isdeleteModalVisible: false,\r\n      deleteBtnLoading: false,\r\n    };\r\n    this.onProfileDelte = this.onProfileDelte.bind(this);\r\n    this.fetchUserDetails = this.fetchUserDetails.bind(this);\r\n    this.formRef = React.createRef();\r\n  }\r\n  fetchUserDetails() {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        ...this.state,\r\n        loading: true,\r\n        userData: null,\r\n      });\r\n      axiosInstance\r\n        .get(\"/users\")\r\n        .then((res) => {\r\n          this.setState(\r\n            {\r\n              ...this.state,\r\n              loading: false,\r\n              userData: res.data,\r\n            },\r\n            () => {\r\n              const userData = this.state.userData;\r\n            }\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          message.err(err.message);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n          });\r\n        });\r\n    }, 2000);\r\n  }\r\n  componentDidMount() {\r\n    this.fetchUserDetails();\r\n  }\r\n  onProfileDelte() {\r\n    this.setState({ ...this.state, deleteBtnLoading: true }, () => {\r\n      axiosInstance\r\n        .delete(\"/upload/profilePic\")\r\n        .then((res) => {\r\n          message.success(\"Removed profile pic successfully\");\r\n          this.setState({\r\n            ...this.state,\r\n            deleteBtnLoading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteBtnLoading: false,\r\n          });\r\n          message.success(\"Error while removing profile pic\");\r\n        });\r\n    });\r\n  }\r\n  render() {\r\n    console.log(this.state.userData);\r\n    return (\r\n      <div className=\"user_wrapper\">\r\n        <Modal\r\n          visible={this.state.isdeleteModalVisible}\r\n          onCancel={() => {\r\n            this.setState({ ...this.state, isdeleteModalVisible: false });\r\n          }}\r\n          footer={[]}\r\n        >\r\n          <div className=\"delte_modal_wrapper\">\r\n            <div className=\"modal_header\">\r\n              Are you sure that you want to delete profile pic?\r\n            </div>\r\n            <div className=\"modal_action_btns\">\r\n              <Button\r\n                style={{\r\n                  backgroundColor: \"#f05454\",\r\n                  color: \"white\",\r\n                  border: \"1px solid #f05454\",\r\n                  marginLeft: \"5px\",\r\n                  borderRadius: \"10px\",\r\n                  fontWeight: 600,\r\n                  loading: false,\r\n                }}\r\n                onClick={this.onProfileDelte}\r\n                loading={this.state.deleteBtnLoading}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  color: \"#f05454\",\r\n                  border: \"1px solid #f05454\",\r\n                  marginLeft: \"5px\",\r\n                  borderRadius: \"10px\",\r\n                  fontWeight: 600,\r\n                  loading: false,\r\n                }}\r\n                onClick={() => {\r\n                  this.setState({\r\n                    ...this.state,\r\n                    isdeleteModalVisible: false,\r\n                  });\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n        {!this.state.loading && this.state.userData ? (\r\n          <div className=\"cover_user\">\r\n            <div className=\"profilePic\">\r\n              {this.state.userData.hasOwnProperty(\"profilePic\") &&\r\n              this.state.userData.profilePic ? (\r\n                <Avatar\r\n                  size={200}\r\n                  src={\r\n                    <Image\r\n                      style={{ height: \"200px\" }}\r\n                      src={`https://localhost:3433/${this.state.userData.profilePic}`}\r\n                    />\r\n                  }\r\n                ></Avatar>\r\n              ) : (\r\n                <>\r\n                  <Avatar\r\n                    size={270}\r\n                    style={{ color: \"#f56a00\", backgroundColor: \"#fde3cf\" }}\r\n                  >\r\n                    <UserOutlined\r\n                      style={{\r\n                        fontSize: \"50px\",\r\n                        alignContent: \"center\",\r\n                        justifyContent: \"center\",\r\n                        paddingTop: \"25px\",\r\n                      }}\r\n                    ></UserOutlined>\r\n                  </Avatar>\r\n                </>\r\n              )}\r\n              <div className=\"action_btns\">\r\n                <div className=\"profile_upload_btn\">\r\n                  <UploadModal\r\n                    fetchUserDetails={this.fetchUserDetails}\r\n                  ></UploadModal>\r\n                </div>\r\n                <div className=\"remove_profile_btn\">\r\n                  <Button\r\n                    style={{\r\n                      border: \"1px solid #f05454\",\r\n                      background: \"white\",\r\n                      color: \"#f05454\",\r\n                      fontWeight: \"600\",\r\n                      borderRadius: \"7px\",\r\n                    }}\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        ...this.state,\r\n                        isdeleteModalVisible: true,\r\n                      });\r\n                    }}\r\n                  >\r\n                    Remove Profile Pic\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"right_content\">\r\n              <div className=\"user_name\">\r\n                <u>{this.state.userData.username}</u>\r\n              </div>\r\n              <div className=\"email\">\r\n                {`Email : `}\r\n                {this.state.userData.hasOwnProperty(\"email\") ? (\r\n                  this.state.userData.email\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              <div className=\"first_name\">\r\n                {`First Name : `}\r\n                {this.state.userData.hasOwnProperty(\"firstName\") ? (\r\n                  this.state.userData.firstName\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              <div className=\"last_name\">\r\n                {`Last Name : `}\r\n                {this.state.userData.hasOwnProperty(\"lastName\") ? (\r\n                  this.state.userData.lastName\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              <div className=\"institutionName\">\r\n                {`Institution Name : `}\r\n                {this.state.userData.hasOwnProperty(\"institutionName\") ? (\r\n                  this.state.userData.institutionName\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              <div className=\"sex\">\r\n                {`Sex : `}\r\n                {this.state.userData.hasOwnProperty(\"sex\") ? (\r\n                  this.state.userData.sex\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              <div className=\"standard\">\r\n                {`Standard : `}\r\n                {this.state.userData.hasOwnProperty(\"standard\") ? (\r\n                  this.state.userData.standard\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              <div className=\"age\">\r\n                {`Age : `}\r\n                {this.state.userData.hasOwnProperty(\"age\") ? (\r\n                  this.state.userData.age\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              <EditProfile\r\n                userData={this.state.userData}\r\n                formRef={this.formRef}\r\n              ></EditProfile>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <Skeleton active></Skeleton>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ViewUser;\r\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/ViewUser/uploadModal.js",[],"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/ViewUser/EditProfileModal.js",["246","247"],"import React, { Component } from \"react\";\nimport { Modal, Button, Form, Input, Select, InputNumber } from \"antd\";\nimport { UserOutlined, EditFilled } from \"@ant-design/icons\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor\";\nimport \"./viewUser.css\";\nconst { Option } = Select;\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nclass EditProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalVisible: false,\n    };\n  }\n  onFinish(e) {\n    console.log(e);\n  }\n  render() {\n    console.log(this.props.userData);\n    return (\n      <>\n        <Modal\n          visible={this.state.isModalVisible}\n          footer={[]}\n          onCancel={() => {\n            this.setState({ ...this.state, isModalVisible: false });\n          }}\n        >\n          <>\n            <div className=\"edit_form_header\">\n              <u>Edit Details</u>\n            </div>\n            <Form\n              {...layout}\n              ref={this.props.formRef}\n              name=\"edit-ref\"\n              onFinish={this.onFinish}\n              style={{\n                marginBottom: \"-40px\",\n              }}\n            >\n              <Form.Item name=\"username\" label=\"User Name\">\n                <Input></Input>\n              </Form.Item>\n              <Form.Item name=\"email\" label=\"Email\">\n                <Input></Input>\n              </Form.Item>\n              <Form.Item name=\"firstname\" label=\"First Name\">\n                <Input></Input>\n              </Form.Item>\n              <Form.Item name=\"lastname\" label=\"Last Name\">\n                <Input></Input>\n              </Form.Item>\n              <Form.Item name=\"age\" label=\"age\">\n                <InputNumber></InputNumber>\n              </Form.Item>\n              <Form.Item name=\"sex\" label=\"sex\">\n                <Select style={{ width: \"100%\" }}>\n                  <Option value=\"male\">Male</Option>\n                  <Option value=\"female\">Female</Option>\n                  <Option value=\"notSay\">Rather not say</Option>\n                </Select>\n              </Form.Item>\n              <Form.Item {...tailLayout}>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  style={{\n                    backgroundColor: \"#f05454\",\n                    color: \"white\",\n                    border: \"1px solid #f05454\",\n                    marginLeft: \"5px\",\n                    borderRadius: \"10px\",\n                    fontWeight: 600,\n                  }}\n                >\n                  Apply Changes\n                </Button>\n              </Form.Item>\n            </Form>\n          </>\n        </Modal>\n        <Button\n          style={{\n            border: \"1px solid #f05454\",\n            background: \"#f05454\",\n            color: \"white\",\n            fontWeight: \"600\",\n            borderRadius: \"4px\",\n            marginTop: \"20px\",\n          }}\n          onClick={() => {\n            const userData = this.props.userData;\n\n            this.setState({ ...this.state, isModalVisible: true }, () => {\n              if (this.props.formRef.current) {\n                console.log(this.props.formRef);\n                this.props.formRef.current.setFieldsValue({\n                  username: userData.username,\n                  email: userData.email,\n                  sex: userData.sex,\n                  firstname: userData.firstName,\n                  lastname: userData.lastname,\n                  age: userData.age,\n                });\n              }\n            });\n          }}\n        >\n          <EditFilled></EditFilled> Edit Profile\n        </Button>\n      </>\n    );\n  }\n}\n\nexport default EditProfile;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/MyTables/OwnershipDisplay.js",["248","249","250","251","252","253","254","255","256","257","258","259"],{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":2,"column":17,"nodeType":"266","messageId":"267","endLine":2,"endColumn":21},{"ruleId":"264","severity":1,"message":"268","line":2,"column":46,"nodeType":"266","messageId":"267","endLine":2,"endColumn":54},{"ruleId":"264","severity":1,"message":"269","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":12},{"ruleId":"264","severity":1,"message":"270","line":6,"column":8,"nodeType":"266","messageId":"267","endLine":6,"endColumn":17},{"ruleId":"264","severity":1,"message":"271","line":8,"column":10,"nodeType":"266","messageId":"267","endLine":8,"endColumn":17},{"ruleId":"264","severity":1,"message":"272","line":72,"column":11,"nodeType":"266","messageId":"267","endLine":72,"endColumn":19},{"ruleId":"264","severity":1,"message":"273","line":7,"column":3,"nodeType":"266","messageId":"267","endLine":7,"endColumn":14},{"ruleId":"264","severity":1,"message":"274","line":9,"column":17,"nodeType":"266","messageId":"267","endLine":9,"endColumn":23},{"ruleId":"275","severity":1,"message":"276","line":35,"column":16,"nodeType":"277","messageId":"278","endLine":35,"endColumn":18},{"ruleId":"275","severity":1,"message":"276","line":37,"column":16,"nodeType":"277","messageId":"278","endLine":37,"endColumn":18},{"ruleId":"275","severity":1,"message":"279","line":79,"column":37,"nodeType":"277","messageId":"278","endLine":79,"endColumn":39},{"ruleId":"275","severity":1,"message":"279","line":80,"column":37,"nodeType":"277","messageId":"278","endLine":80,"endColumn":39},{"ruleId":"275","severity":1,"message":"279","line":87,"column":45,"nodeType":"277","messageId":"278","endLine":87,"endColumn":47},{"ruleId":"275","severity":1,"message":"279","line":92,"column":45,"nodeType":"277","messageId":"278","endLine":92,"endColumn":47},{"ruleId":"280","severity":1,"message":"281","line":104,"column":13,"nodeType":"282","endLine":104,"endColumn":52},{"ruleId":"283","severity":1,"message":"284","line":181,"column":17,"nodeType":"285","endLine":181,"endColumn":48},{"ruleId":"286","severity":1,"message":"287","line":5,"column":3,"nodeType":"288","messageId":"289","endLine":7,"endColumn":4},{"ruleId":"286","severity":1,"message":"287","line":5,"column":3,"nodeType":"288","messageId":"289","endLine":7,"endColumn":4},{"ruleId":"264","severity":1,"message":"290","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":16},{"ruleId":"264","severity":1,"message":"291","line":5,"column":27,"nodeType":"266","messageId":"267","endLine":5,"endColumn":36},{"ruleId":"264","severity":1,"message":"292","line":6,"column":16,"nodeType":"266","messageId":"267","endLine":6,"endColumn":26},{"ruleId":"264","severity":1,"message":"293","line":11,"column":9,"nodeType":"266","messageId":"267","endLine":11,"endColumn":16},{"ruleId":"275","severity":1,"message":"279","line":74,"column":41,"nodeType":"277","messageId":"278","endLine":74,"endColumn":43},{"ruleId":"275","severity":1,"message":"279","line":97,"column":39,"nodeType":"277","messageId":"278","endLine":97,"endColumn":41},{"ruleId":"264","severity":1,"message":"294","line":127,"column":25,"nodeType":"266","messageId":"267","endLine":127,"endColumn":34},{"ruleId":"264","severity":1,"message":"295","line":2,"column":36,"nodeType":"266","messageId":"267","endLine":2,"endColumn":48},{"ruleId":"264","severity":1,"message":"296","line":5,"column":3,"nodeType":"266","messageId":"267","endLine":5,"endColumn":10},{"ruleId":"264","severity":1,"message":"297","line":6,"column":3,"nodeType":"266","messageId":"267","endLine":6,"endColumn":9},{"ruleId":"264","severity":1,"message":"298","line":7,"column":3,"nodeType":"266","messageId":"267","endLine":7,"endColumn":13},{"ruleId":"264","severity":1,"message":"299","line":8,"column":3,"nodeType":"266","messageId":"267","endLine":8,"endColumn":14},{"ruleId":"264","severity":1,"message":"300","line":10,"column":3,"nodeType":"266","messageId":"267","endLine":10,"endColumn":9},{"ruleId":"264","severity":1,"message":"301","line":11,"column":3,"nodeType":"266","messageId":"267","endLine":11,"endColumn":11},{"ruleId":"264","severity":1,"message":"302","line":13,"column":10,"nodeType":"266","messageId":"267","endLine":13,"endColumn":22},{"ruleId":"264","severity":1,"message":"303","line":17,"column":8,"nodeType":"266","messageId":"267","endLine":17,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":56,"column":15,"nodeType":"282","endLine":56,"endColumn":46},{"ruleId":"264","severity":1,"message":"304","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":15},{"ruleId":"264","severity":1,"message":"305","line":4,"column":42,"nodeType":"266","messageId":"267","endLine":4,"endColumn":48},{"ruleId":"286","severity":1,"message":"287","line":13,"column":3,"nodeType":"288","messageId":"289","endLine":15,"endColumn":4},{"ruleId":"264","severity":1,"message":"306","line":2,"column":24,"nodeType":"266","messageId":"267","endLine":2,"endColumn":34},{"ruleId":"264","severity":1,"message":"307","line":6,"column":10,"nodeType":"266","messageId":"267","endLine":6,"endColumn":16},{"ruleId":"264","severity":1,"message":"308","line":6,"column":18,"nodeType":"266","messageId":"267","endLine":6,"endColumn":23},{"ruleId":"264","severity":1,"message":"265","line":6,"column":25,"nodeType":"266","messageId":"267","endLine":6,"endColumn":29},{"ruleId":"264","severity":1,"message":"270","line":7,"column":8,"nodeType":"266","messageId":"267","endLine":7,"endColumn":17},{"ruleId":"264","severity":1,"message":"309","line":8,"column":9,"nodeType":"266","messageId":"267","endLine":8,"endColumn":15},{"ruleId":"264","severity":1,"message":"310","line":8,"column":17,"nodeType":"266","messageId":"267","endLine":8,"endColumn":24},{"ruleId":"264","severity":1,"message":"311","line":8,"column":26,"nodeType":"266","messageId":"267","endLine":8,"endColumn":32},{"ruleId":"264","severity":1,"message":"312","line":8,"column":34,"nodeType":"266","messageId":"267","endLine":8,"endColumn":39},{"ruleId":"264","severity":1,"message":"293","line":9,"column":9,"nodeType":"266","messageId":"267","endLine":9,"endColumn":16},{"ruleId":"275","severity":1,"message":"279","line":24,"column":29,"nodeType":"277","messageId":"278","endLine":24,"endColumn":31},{"ruleId":"264","severity":1,"message":"291","line":8,"column":3,"nodeType":"266","messageId":"267","endLine":8,"endColumn":12},{"ruleId":"264","severity":1,"message":"313","line":9,"column":3,"nodeType":"266","messageId":"267","endLine":9,"endColumn":10},{"ruleId":"264","severity":1,"message":"314","line":13,"column":27,"nodeType":"266","messageId":"267","endLine":13,"endColumn":32},{"ruleId":"264","severity":1,"message":"315","line":20,"column":7,"nodeType":"266","messageId":"267","endLine":20,"endColumn":11},{"ruleId":"275","severity":1,"message":"279","line":73,"column":33,"nodeType":"277","messageId":"278","endLine":73,"endColumn":35},{"ruleId":"264","severity":1,"message":"316","line":88,"column":9,"nodeType":"266","messageId":"267","endLine":88,"endColumn":13},{"ruleId":"317","severity":1,"message":"318","line":106,"column":33,"nodeType":"319","messageId":"320","endLine":106,"endColumn":35},{"ruleId":"317","severity":1,"message":"318","line":121,"column":27,"nodeType":"319","messageId":"320","endLine":121,"endColumn":29},{"ruleId":"264","severity":1,"message":"321","line":183,"column":11,"nodeType":"266","messageId":"267","endLine":183,"endColumn":12},{"ruleId":"286","severity":1,"message":"287","line":5,"column":3,"nodeType":"288","messageId":"289","endLine":7,"endColumn":4},{"ruleId":"264","severity":1,"message":"322","line":2,"column":17,"nodeType":"266","messageId":"267","endLine":2,"endColumn":22},{"ruleId":"264","severity":1,"message":"323","line":2,"column":24,"nodeType":"266","messageId":"267","endLine":2,"endColumn":28},{"ruleId":"264","severity":1,"message":"274","line":2,"column":30,"nodeType":"266","messageId":"267","endLine":2,"endColumn":36},{"ruleId":"264","severity":1,"message":"314","line":2,"column":38,"nodeType":"266","messageId":"267","endLine":2,"endColumn":43},{"ruleId":"264","severity":1,"message":"271","line":2,"column":45,"nodeType":"266","messageId":"267","endLine":2,"endColumn":52},{"ruleId":"264","severity":1,"message":"324","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":15},{"ruleId":"325","severity":1,"message":"326","line":76,"column":5,"nodeType":"327","messageId":"328","endLine":139,"endColumn":6},{"ruleId":"264","severity":1,"message":"329","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":13},{"ruleId":"264","severity":1,"message":"330","line":15,"column":7,"nodeType":"266","messageId":"267","endLine":15,"endColumn":19},{"ruleId":"275","severity":1,"message":"279","line":89,"column":15,"nodeType":"277","messageId":"278","endLine":89,"endColumn":17},{"ruleId":"331","severity":1,"message":"332","line":148,"column":13,"nodeType":"266","messageId":"333","endLine":148,"endColumn":17},{"ruleId":"264","severity":1,"message":"314","line":2,"column":31,"nodeType":"266","messageId":"267","endLine":2,"endColumn":36},{"ruleId":"264","severity":1,"message":"322","line":2,"column":28,"nodeType":"266","messageId":"267","endLine":2,"endColumn":33},{"ruleId":"264","severity":1,"message":"334","line":2,"column":57,"nodeType":"266","messageId":"267","endLine":2,"endColumn":62},{"ruleId":"264","severity":1,"message":"335","line":5,"column":18,"nodeType":"266","messageId":"267","endLine":5,"endColumn":25},{"ruleId":"264","severity":1,"message":"336","line":4,"column":10,"nodeType":"266","messageId":"267","endLine":4,"endColumn":13},{"ruleId":"264","severity":1,"message":"329","line":6,"column":8,"nodeType":"266","messageId":"267","endLine":6,"endColumn":13},{"ruleId":"264","severity":1,"message":"315","line":8,"column":5,"nodeType":"266","messageId":"267","endLine":8,"endColumn":9},{"ruleId":"337","severity":1,"message":"338","line":28,"column":7,"nodeType":"339","messageId":"278","endLine":28,"endColumn":14},{"ruleId":"317","severity":1,"message":"318","line":126,"column":33,"nodeType":"319","messageId":"320","endLine":126,"endColumn":35},{"ruleId":"317","severity":1,"message":"318","line":166,"column":27,"nodeType":"319","messageId":"320","endLine":166,"endColumn":29},{"ruleId":"264","severity":1,"message":"340","line":2,"column":36,"nodeType":"266","messageId":"267","endLine":2,"endColumn":43},{"ruleId":"264","severity":1,"message":"274","line":5,"column":10,"nodeType":"266","messageId":"267","endLine":5,"endColumn":16},{"ruleId":"264","severity":1,"message":"329","line":17,"column":8,"nodeType":"266","messageId":"267","endLine":17,"endColumn":13},{"ruleId":"275","severity":1,"message":"279","line":84,"column":42,"nodeType":"277","messageId":"278","endLine":84,"endColumn":44},{"ruleId":"275","severity":1,"message":"279","line":85,"column":39,"nodeType":"277","messageId":"278","endLine":85,"endColumn":41},{"ruleId":"275","severity":1,"message":"279","line":109,"column":51,"nodeType":"277","messageId":"278","endLine":109,"endColumn":53},{"ruleId":"275","severity":1,"message":"279","line":111,"column":48,"nodeType":"277","messageId":"278","endLine":111,"endColumn":50},{"ruleId":"280","severity":1,"message":"281","line":120,"column":13,"nodeType":"282","endLine":120,"endColumn":40},{"ruleId":"264","severity":1,"message":"274","line":2,"column":26,"nodeType":"266","messageId":"267","endLine":2,"endColumn":32},{"ruleId":"264","severity":1,"message":"341","line":5,"column":3,"nodeType":"266","messageId":"267","endLine":5,"endColumn":10},{"ruleId":"264","severity":1,"message":"295","line":8,"column":3,"nodeType":"266","messageId":"267","endLine":8,"endColumn":15},{"ruleId":"264","severity":1,"message":"342","line":5,"column":24,"nodeType":"266","messageId":"267","endLine":5,"endColumn":34},{"ruleId":"264","severity":1,"message":"343","line":38,"column":21,"nodeType":"266","messageId":"267","endLine":38,"endColumn":29},{"ruleId":"264","severity":1,"message":"302","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":22},{"ruleId":"264","severity":1,"message":"344","line":4,"column":10,"nodeType":"266","messageId":"267","endLine":4,"endColumn":23},{"ruleId":"264","severity":1,"message":"274","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":16},{"ruleId":"264","severity":1,"message":"340","line":3,"column":18,"nodeType":"266","messageId":"267","endLine":3,"endColumn":25},{"ruleId":"264","severity":1,"message":"271","line":3,"column":27,"nodeType":"266","messageId":"267","endLine":3,"endColumn":34},{"ruleId":"264","severity":1,"message":"302","line":7,"column":10,"nodeType":"266","messageId":"267","endLine":7,"endColumn":22},{"ruleId":"275","severity":1,"message":"279","line":23,"column":56,"nodeType":"277","messageId":"278","endLine":23,"endColumn":58},{"ruleId":"275","severity":1,"message":"279","line":32,"column":65,"nodeType":"277","messageId":"278","endLine":32,"endColumn":67},{"ruleId":"317","severity":1,"message":"318","line":34,"column":39,"nodeType":"319","messageId":"320","endLine":34,"endColumn":41},{"ruleId":"275","severity":1,"message":"279","line":48,"column":65,"nodeType":"277","messageId":"278","endLine":48,"endColumn":67},{"ruleId":"317","severity":1,"message":"318","line":51,"column":39,"nodeType":"319","messageId":"320","endLine":51,"endColumn":41},{"ruleId":"275","severity":1,"message":"279","line":69,"column":36,"nodeType":"277","messageId":"278","endLine":69,"endColumn":38},{"ruleId":"275","severity":1,"message":"279","line":119,"column":43,"nodeType":"277","messageId":"278","endLine":119,"endColumn":45},{"ruleId":"275","severity":1,"message":"279","line":167,"column":43,"nodeType":"277","messageId":"278","endLine":167,"endColumn":45},"no-native-reassign",["345"],"no-negated-in-lhs",["346"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'logo' is defined but never used.","'AllTables' is defined but never used.","'message' is defined but never used.","'NoMatch2' is assigned a value but never used.","'faSignInAlt' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'MyButton' is defined but never used.","'faSpinner' is defined but never used.","'withRouter' is defined but never used.","'SubMenu' is assigned a value but never used.","'tableName' is assigned a value but never used.","'notification' is defined but never used.","'faCheck' is defined but never used.","'faUser' is defined but never used.","'faShareAlt' is defined but never used.","'faEllipsisH' is defined but never used.","'faBell' is defined but never used.","'faBellOn' is defined but never used.","'UserOutlined' is defined but never used.","'Spinner' is defined but never used.","'Table' is defined but never used.","'Router' is defined but never used.","'Breadcrumb' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'faShare' is defined but never used.","'Space' is defined but never used.","'days' is assigned a value but never used.","'path' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'d' is assigned a value but never used.","'Input' is defined but never used.","'Form' is defined but never used.","'MyInput' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'axios' is defined but never used.","'dateToFormat' is assigned a value but never used.","no-redeclare","'temp' is already defined.","redeclared","'Modal' is defined but never used.","'faTrash' is defined but never used.","'fas' is defined but never used.","no-dupe-keys","Duplicate key 'loading'.","ObjectExpression","'Divider' is defined but never used.","'Tooltip' is defined but never used.","'EditFilled' is defined but never used.","'userData' is assigned a value but never used.","'axiosInstance' is defined but never used.","no-global-assign","no-unsafe-negation"]