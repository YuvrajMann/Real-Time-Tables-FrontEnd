[{"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/index.js":"1","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/App.js":"2","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/reportWebVitals.js":"3","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/Login/Login.js":"4","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/MyButton/MyButton.js":"5","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Input/MyInput.js":"6","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/SideBar.js/SideBar.js":"7","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/MyHeader/MyHeader.js":"8","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/MainContent/MainContent.js":"9","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Dashboards/MainDashboard/MainDashboard.js":"10","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/MyTables/MyTables.js":"11","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Content/content.js":"12","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/AddTable.js":"13","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/CompleteTable.js":"14","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/ConfigureSubjects.js":"15","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/ConfigureTable.js":"16","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/SelectSlots.js":"17","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/utils/axiosInterceptor.js":"18","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Spinner/Spinner.js":"19","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AllTables/AllTables.js":"20","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AllTables/DelTable.js":"21","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/EditTable/EditTable.js":"22","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/MyTables/SubjectModal.js":"23","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/UseDisplay/UserDisplay.js":"24"},{"size":528,"mtime":1606844334304,"results":"25","hashOfConfig":"26"},{"size":2330,"mtime":1610778071659,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1606808428947,"results":"28","hashOfConfig":"26"},{"size":5951,"mtime":1610778440624,"results":"29","hashOfConfig":"26"},{"size":336,"mtime":1606892596086,"results":"30","hashOfConfig":"26"},{"size":275,"mtime":1606848485695,"results":"31","hashOfConfig":"26"},{"size":4575,"mtime":1611724866112,"results":"32","hashOfConfig":"26"},{"size":2022,"mtime":1612707443969,"results":"33","hashOfConfig":"26"},{"size":1587,"mtime":1611727866516,"results":"34","hashOfConfig":"26"},{"size":1416,"mtime":1610989594645,"results":"35","hashOfConfig":"26"},{"size":4998,"mtime":1612252294738,"results":"36","hashOfConfig":"26"},{"size":399,"mtime":1607101194610,"results":"37","hashOfConfig":"26"},{"size":3842,"mtime":1610786217867,"results":"38","hashOfConfig":"26"},{"size":5750,"mtime":1612118135704,"results":"39","hashOfConfig":"26"},{"size":2410,"mtime":1607324393507,"results":"40","hashOfConfig":"26"},{"size":2624,"mtime":1607324759526,"results":"41","hashOfConfig":"26"},{"size":1694,"mtime":1607532827691,"results":"42","hashOfConfig":"26"},{"size":201,"mtime":1610003848018,"results":"43","hashOfConfig":"26"},{"size":379,"mtime":1610009452602,"results":"44","hashOfConfig":"26"},{"size":3774,"mtime":1612247733016,"results":"45","hashOfConfig":"26"},{"size":3239,"mtime":1612247462224,"results":"46","hashOfConfig":"26"},{"size":8235,"mtime":1612206844490,"results":"47","hashOfConfig":"26"},{"size":4587,"mtime":1612257482105,"results":"48","hashOfConfig":"26"},{"size":1675,"mtime":1612708016074,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"bqf76x",{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"52"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"52"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/index.js",[],["116","117"],"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/App.js",["118","119","120"],"import React, { Component } from \"react\";\nimport { Route, Link, Switch, BrowserRouter } from \"react-router-dom\";\nimport logo from \"./assests/clock2.png\";\nimport Login from \"./Pages/Login/Login\";\nimport MainDashboard from \"./Dashboards/MainDashboard/MainDashboard\";\nimport AllTables from \"../src/Pages/AllTables/AllTables\";\nimport { axiosInstance } from \"./utils/axiosInterceptor\";\nimport { message } from \"antd\";\nimport axios from \"axios\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedin: false,\n    };\n    this.toggleLoggedIn = this.toggleLoggedIn.bind(this);\n  }\n  toggleLoggedIn() {\n    this.setState({ ...this.state, isLoggedin: !this.state.isLoggedin });\n  }\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      axios\n        .get(\"https://localhost:3433/users/checkJWTToken\", {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .then((res) => {\n          console.log(res);\n          axiosInstance.interceptors.request.use((config) => {\n            const auth = `Bearer ${token}`;\n            console.log(auth);\n            config.headers.Authorization = `Bearer ${token}`;\n            return config;\n          });\n          this.toggleLoggedIn();\n        })\n        .catch((err) => {\n          console.log(err);\n          message.warn(\"Invalid token\");\n        });\n    }\n  }\n  render() {\n    if (!this.state.isLoggedin) {\n      return (\n        <BrowserRouter>\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              history={this.props.history}\n              render={(props) => (\n                <Login\n                  history={props.history}\n                  toggleLoggedIn={this.toggleLoggedIn}\n                ></Login>\n              )}\n            ></Route>\n          </Switch>\n        </BrowserRouter>\n      );\n    } else {\n      return (\n        <BrowserRouter>\n          <Switch>\n            <Route\n              path=\"/\"\n              render={(props) => (\n                <MainDashboard\n                  history={props.history}\n                  toggleLoggedIn={this.toggleLoggedIn}\n                ></MainDashboard>\n              )}\n            ></Route>\n          </Switch>\n        </BrowserRouter>\n      );\n    }\n  }\n}\n\nexport default App;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/reportWebVitals.js",[],"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/Login/Login.js",["121","122","123","124","125","126","127","128","129","130"],"import React, { Component } from \"react\";\nimport logo from \"../../assests/clock1.svg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faExclamation,\n  faSignInAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Input, Button, Tooltip, message } from \"antd\";\nimport \"./Login.css\";\nimport MyButton from \"../../Components/MyButton/MyButton\";\nimport MyInput from \"../../Components/Input/MyInput\";\nimport axios from \"axios\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: null,\n      password: null,\n      loading: false,\n      userTooltip: false,\n      passwordTooltip: false,\n      btnLoading: false,\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n  handleLogin = () => {\n    const { username, password } = this.state;\n    console.log(username, password);\n    if (\n      username != null &&\n      username != \"\" &&\n      password != null &&\n      password != \"\"\n    ) {\n      this.setState(\n        {\n          ...this.state,\n          userTooltip: false,\n          passwordTooltip: false,\n          btnLoading: true,\n        },\n        () => {\n          setTimeout(() => {\n            axios\n              .post(\"https://localhost:3433/users/login\", {\n                username: username,\n                password: password,\n              })\n              .then((res) => {\n                this.setState({\n                  ...this.state,\n                  btnLoading: false,\n                });\n                const token = res.data.token;\n                if (token) {\n                  axiosInstance.interceptors.request.use((config) => {\n                    config.headers.Authorization = \"Bearer \" + token;\n                    return config;\n                  });\n                  localStorage.setItem(\"token\", token);\n                  message.success(\"Successfully logged in\");\n                  this.props.toggleLoggedIn();\n                }\n                console.log(res);\n              })\n              .catch((err) => {\n                this.setState({\n                  ...this.state,\n                  btnLoading: false,\n                });\n                console.log(err);\n              });\n          }, 2000);\n        }\n      );\n    } else if (\n      (username == null || username == \"\") &&\n      (password == null || password == \"\")\n    ) {\n      this.setState({\n        ...this.state,\n        userTooltip: true,\n        passwordTooltip: true,\n      });\n    } else if (username == null || username == \"\") {\n      this.setState({\n        ...this.state,\n        userTooltip: true,\n      });\n    } else if (password == null || password == \"\") {\n      this.setState({\n        ...this.state,\n        passwordTooltip: true,\n      });\n    }\n  };\n  render() {\n    return (\n      <div className=\"login-page\">\n        <div className=\"loginheader\">\n          <div>\n            <img src={logo} width={40} height={40}></img>\n            <div id=\"title_name\">Real Time Table</div>\n          </div>\n          <div className=\"links\">\n            <div>About</div>\n            <MyButton\n              text=\"Sign Up\"\n              id=\"signup_btn1\"\n              style={{ width: \"90px\", height: \"40px\", borderRadius: \"20px\" }}\n            ></MyButton>\n          </div>\n        </div>\n        <div className=\"logincontent\">\n          <div>\n            <FontAwesomeIcon icon={faUser} />\n            <div>Login</div>\n          </div>\n          <div>\n            <Tooltip\n              color=\"#FF8A8A\"\n              title={() => {\n                return (\n                  <>\n                    <FontAwesomeIcon icon={faExclamation}></FontAwesomeIcon>\n                    <span> Username required</span>\n                  </>\n                );\n              }}\n              placement=\"topRight\"\n              visible={this.state.userTooltip}\n              overlayClassName=\"numeric-input\"\n            >\n              <MyInput\n                placeholder=\"User Name\"\n                onChange={(event) => {\n                  this.setState({\n                    ...this.state,\n                    userTooltip: false,\n                    username: event.target.value,\n                  });\n                }}\n              ></MyInput>\n            </Tooltip>\n            <Tooltip\n              color=\"#FF8A8A\"\n              placement=\"topRight\"\n              visible={this.state.passwordTooltip}\n              overlayClassName=\"numeric-input\"\n              title={() => {\n                return (\n                  <>\n                    <FontAwesomeIcon icon={faExclamation}></FontAwesomeIcon>\n                    <span> Password required</span>\n                  </>\n                );\n              }}\n            >\n              <Input.Password\n                placeholder=\"password\"\n                id=\"my_pass\"\n                onChange={(event) => {\n                  this.setState({\n                    ...this.state,\n                    passwordTooltip: false,\n                    password: event.target.value,\n                  });\n                }}\n              />\n            </Tooltip>\n            <div className=\"login_btn\">\n              <MyButton\n                text=\"Login\"\n                loading={false}\n                onClick={this.handleLogin}\n                style={{\n                  width: \"100%\",\n                }}\n                loading={this.state.btnLoading}\n              ></MyButton>\n            </div>\n            <div className=\"signup_btn\">\n              <MyButton\n                text=\"Sign Up\"\n                loading={false}\n                style={{\n                  width: \"100%\",\n                }}\n              ></MyButton>\n            </div>\n          </div>\n        </div>\n        <div className=\"loginfooter\">\n          * Real Time Tables Created by Yuvraj Mann *\n        </div>\n      </div>\n    );\n  }\n}\nexport default Login;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/MyButton/MyButton.js",["131"],"import React, { Component } from \"react\";\nimport { Button } from \"antd\";\nimport \"./MyButton.css\";\nclass MyButton extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <Button className=\"outlined\" {...this.props}>\n        {this.props.text}\n      </Button>\n    );\n  }\n}\nexport default MyButton;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Input/MyInput.js",["132"],"import React, { Component } from \"react\";\nimport { Input } from \"antd\";\nimport \"./MyInput.css\";\nclass MyInput extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return <Input id=\"my_inut\" {...this.props}></Input>;\n  }\n}\nexport default MyInput;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/SideBar.js/SideBar.js",["133","134","135","136","137","138","139"],"import React, { Component } from \"react\";\nimport { Layout, Menu, Button, Tooltip, message } from \"antd\";\nimport MyButton from \"../MyButton/MyButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTable, faPlus, faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor.js\";\nimport Spinner from \"../Spinner/Spinner\";\nimport \"./SideBar.css\";\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass SideBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tables: null,\n      loading: false,\n      isAllTable: false,\n    };\n    this.getAllTable = this.getAllTable.bind(this);\n  }\n  getAllTable() {\n    this.setState({ ...this.state, loading: true });\n    setTimeout(() => {\n      axiosInstance\n        .get(\"/table\")\n        .then((res) => {\n          console.log(res);\n          this.setState({\n            ...this.state,\n            tables: res.data.results,\n            loading: false,\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            ...this.state,\n            loading: false,\n          });\n          console.log(err);\n          message.warn(err.message);\n        });\n    }, 2000);\n  }\n  componentDidMount() {\n    this.getAllTable();\n  }\n  render() {\n    return (\n      <Sider\n        style={{\n          background: \"#30475e\",\n          boxShadow: \"rgba(114, 114, 114, 0.42) 1px 3px 5px -1px\",\n        }}\n      >\n        <Link to=\"/allTables\">\n          <div className=\"mytable_btn\">\n            {this.props.collapsed ? (\n              <Tooltip title=\"My Tables\" placement=\"right\">\n                <Button\n                  style={{\n                    width: \"90%\",\n                    height: \"50px\",\n                    marginBottom: \"30px\",\n                    justifyContent: \"center\",\n                    backgroundColor: \"#f05454\",\n                    borderColor: \"#f05454\",\n                    color: \"#fff\",\n                    fontWeight: 800,\n                    textAlign: \"center\",\n                  }}\n                >\n                  {this.props.collapsed == false ? (\n                    \"My Tables\"\n                  ) : (\n                    <FontAwesomeIcon icon={faTable}></FontAwesomeIcon>\n                  )}\n                </Button>\n              </Tooltip>\n            ) : (\n              <Button\n                style={{\n                  width: \"90%\",\n                  height: \"50px\",\n                  marginBottom: \"30px\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"#f05454\",\n                  borderColor: \"#f05454\",\n                  color: \"#fff\",\n                  fontWeight: 700,\n                  fontSize: \"18px\",\n                  textAlign: \"center\",\n                  borderRadius: \"10px\",\n                }}\n              >\n                {this.props.collapsed == false ? (\n                  \"My Tables\"\n                ) : (\n                  <FontAwesomeIcon icon={faTable}></FontAwesomeIcon>\n                )}\n              </Button>\n            )}\n          </div>\n        </Link>\n        <Link to=\"/addTable\">\n          <Tooltip title=\"New Table\" placement=\"right\">\n            <div className=\"add_btn\">\n              <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>{\" \"}\n            </div>\n          </Tooltip>\n        </Link>\n        {!this.state.loading ? (\n          <Menu\n            theme=\"dark\"\n            defaultSelectedKeys={[\"1\"]}\n            style={{\n              background: \"#30475e\",\n              height: \"100vh\",\n              overflowY: \"auto\",\n            }}\n            mode=\"inline\"\n            id={this.props.collapsed ? \"col_tables\" : \"tables\"}\n          >\n            {this.state.tables\n              ? this.state.tables.map((table, index) => {\n                  const tableName = table.tableName.replace(/ /g, \"_\");\n                  return (\n                    <Menu.Item key={table._id}>\n                      <Link to={`/tables/${table._id}`}>{table.tableName}</Link>\n                    </Menu.Item>\n                  );\n                })\n              : null}\n          </Menu>\n        ) : (\n          <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n            <Spinner\n              style={{\n                color: \"white\",\n                textAlign: \"center\",\n                fontSize: \"1.8em\",\n              }}\n            ></Spinner>\n          </div>\n        )}\n      </Sider>\n    );\n  }\n}\n\nexport default SideBar;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/MyHeader/MyHeader.js",["140","141","142","143","144","145"],"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/MainContent/MainContent.js",["146","147","148"],"import React, { Component } from \"react\";\nimport { Layout } from \"antd\";\nimport { Table } from \"antd\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport MyTables from \"../../Pages/MyTables/MyTables\";\nimport AddTable from \"../../Pages/AddTable/AddTable\";\nimport AllTables from \"../../Pages/AllTables/AllTables\";\nimport EditTables from \"../../Pages/EditTable/EditTable\";\nconst { Content } = Layout;\n\nclass MainContent extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <Content\n        style={{\n          margin: \"40px 20px\",\n          borderRadius: \"20px\",\n          minHeight: \"auto\",\n        }}\n      >\n        <Switch>\n          <Route\n            path=\"/tables/:tableId\"\n            exact={true}\n            component={() => {\n              return <MyTables history={this.props.history}></MyTables>;\n            }}\n          ></Route>\n          <Route\n            path=\"/addTable\"\n            children={() => {\n              return <AddTable history={this.props.history}></AddTable>;\n            }}\n          ></Route>\n          <Route\n            path=\"/allTables\"\n            children={() => {\n              return <AllTables history={this.props.history}></AllTables>;\n            }}\n          ></Route>\n          <Route\n            path=\"/editTable/:tableId\"\n            exact={true}\n            component={() => {\n              return <EditTables history={this.props.history}></EditTables>;\n            }}\n          ></Route>\n        </Switch>\n      </Content>\n    );\n  }\n}\nexport default MainContent;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Dashboards/MainDashboard/MainDashboard.js",["149","150","151","152","153","154","155","156","157","158","159"],"import React, { Component } from \"react\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport SideBar from \"../../Components/SideBar.js/SideBar.js\";\nimport MyHeader from \"../../Components/MyHeader/MyHeader\";\nimport MainContent from \"../../Components/MainContent/MainContent\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport AllTables from \"../../Pages/AllTables/AllTables\";\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\nclass MyTables extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n    };\n  }\n  onCollapse = (collapsed) => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n\n  render() {\n    const page = this.props.history.location.pathname.split(\"/\")[1];\n    const isAllTable = page == \"allTables\";\n\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        {!isAllTable ? (\n          <SideBar\n            collapsed={this.state.collapsed}\n            onCollapse={this.onCollapse}\n            history={this.props.history}\n          ></SideBar>\n        ) : null}\n        <Layout className=\"site-layout\">\n          <MyHeader\n            toggleLoggedIn={this.props.toggleLoggedIn}\n            history={this.props.history}\n          ></MyHeader>\n          <MainContent history={this.props.history}></MainContent>\n        </Layout>\n      </Layout>\n    );\n  }\n}\nexport default MyTables;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/MyTables/MyTables.js",["160","161","162","163","164","165"],"import React, { Component } from \"react\";\nimport TableContent from \"../../Components/Content/content\";\nimport MyButton from \"../../Components/MyButton/MyButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendar,\n  faClock,\n  faSpinner,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport moment from \"moment\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor.js\";\nimport { Divider, Space, message, Skeleton } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport \"./MyTables.css\";\nimport SubjectModal from \"./SubjectModal.js\";\n\nconst days = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\nclass MyTables extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curTime: null,\n      tableName: null,\n      loading: false,\n      columns: [],\n      data: [],\n      tableId: null,\n    };\n    this.clock = this.clock.bind(this);\n  }\n  fetchTableDetails = () => {\n    const tableId = this.props.history.location.pathname.split(\"/\")[2];\n    this.setState({ ...this.state, loading: true });\n    setTimeout(() => {\n      axiosInstance\n        .get(`/table/${tableId}`)\n        .then((table) => {\n          console.log(table);\n          this.createColumns(table.data.periods);\n          this.createData(table.data.table);\n          this.setState({\n            ...this.state,\n            tableName: table.data.tableName,\n            tableId: tableId,\n            loading: false,\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n          if (err.message) {\n            message.warn(err.message);\n          }\n          this.setState({\n            ...this.state,\n\n            loading: false,\n          });\n        });\n    }, 1000);\n  };\n  componentDidMount() {\n    this.clock();\n    setInterval(this.clock, 1000);\n    console.log(\"asdsad\");\n    this.fetchTableDetails();\n  }\n  createColumns(periods) {\n    console.log(periods);\n    var columns = [];\n    let dayCol = {\n      title: \"Day\",\n      dataIndex: \"Day\",\n      key: \"Day\",\n      render: (day) => {\n        return <div style={{ fontWeight: 700 }}>{day}</div>;\n      },\n    };\n    columns.push(dayCol);\n    periods.map((period, index) => {\n      let temp = {};\n      temp[\"title\"] = period[1];\n      temp[\"dataIndex\"] = index + 1;\n      temp[\"key\"] = index + 1;\n      columns.push(temp);\n    });\n    console.log(columns);\n    this.setState({\n      ...this.state,\n      columns: columns,\n    });\n  }\n  createData(data) {\n    var tabledata = [];\n    data.map((row, index) => {\n      var temp = {};\n      temp[\"key\"] = index;\n      temp[\"Day\"] = row.day;\n      let merged = { ...temp, ...row.schedule };\n\n      tabledata.push(merged);\n    });\n    this.setState({\n      ...this.state,\n      data: tabledata,\n    });\n  }\n  clock() {\n    // We create a new Date object and assign it to a variable called \"time\".\n    var time = new Date(),\n      // Access the \"getHours\" method on the Date object with the dot accessor.\n      hours = time.getHours(),\n      // Access the \"getMinutes\" method with the dot accessor.\n      minutes = time.getMinutes(),\n      seconds = time.getSeconds();\n    function harold(standIn) {\n      if (standIn < 10) {\n        standIn = \"0\" + standIn;\n      }\n      return standIn;\n    }\n    var str = `${harold(hours)}:${harold(minutes)}:${harold(seconds)}`;\n    this.setState({ ...this.state, curTime: str });\n  }\n\n  render() {\n    const d = new Date();\n    const dateToFormat = \"dddd, MMMM Do YYYY\";\n    return (\n      <div className=\"wrapper\">\n        <div className=\"tableHeader\">\n          <div className=\"table_name\">My Tables/{this.state.tableName}</div>\n\n          <div className=\"date\">\n            <FontAwesomeIcon icon={faCalendar}></FontAwesomeIcon>\n\n            <div>\n              {moment().format(dateToFormat)}\n              {/* {d.getDate()}-{d.getMonth() + 1}-{d.getFullYear()} */}\n            </div>\n            <div id=\"bar\"></div>\n            <div style={{ width: \"90px\", display: \"flex\" }}>\n              <FontAwesomeIcon icon={faClock}></FontAwesomeIcon>\n              <div>{this.state.curTime}</div>\n            </div>\n          </div>\n        </div>\n        <Divider></Divider>\n        {this.state.loading ? (\n          <Skeleton active></Skeleton>\n        ) : (\n          <>\n            <TableContent\n              id=\"displayTable\"\n              columns={this.state.columns}\n              data={this.state.data}\n            ></TableContent>\n\n            <div className=\"my_tablefooter\">\n              <SubjectModal history={this.props.history}></SubjectModal>\n              <Link to={`/editTable/${this.state.tableId}`}>\n                <div className=\"edit_btn\">\n                  <MyButton\n                    text=\"Edit\"\n                    style={{ borderRadius: \"10px\" }}\n                  ></MyButton>\n                </div>\n              </Link>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\nexport default MyTables;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Content/content.js",["166"],"import React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport \"./content.css\";\nclass TableContent extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <Table\n        columns={this.props.columns}\n        dataSource={this.props.data}\n        theme=\"dark\"\n        id=\"display_table\"\n      ></Table>\n    );\n  }\n}\nexport default TableContent;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/AddTable.js",["167","168","169","170","171","172","173"],"import React, { Component } from \"react\";\nimport { Steps, Input, Form, Button, Space, message } from \"antd\";\nimport MyInput from \"../../Components/Input/MyInput\";\nimport CompleteTable from \"./CompleteTable\";\nimport ConfigureSubjects from \"./ConfigureSubjects\";\nimport ConfigureTable from \"./ConfigureTable.js\";\nimport SelectSlots from \"./SelectSlots.js\";\nimport \"./AddTable.css\";\n\nconst { Step } = Steps;\n\nconst steps = [\n  {\n    title: \"Configure Table\",\n  },\n  {\n    title: \"Configure Subjects\",\n  },\n  {\n    title: \"Select Time Slots For Lectures\",\n  },\n  {\n    title: \"Complete Table\",\n  },\n];\n\nclass AddTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 0,\n      numberOfPeriods: 0,\n      table_name: null,\n      numberOfSub: 0,\n      subInfo: null,\n      lec_slot: null,\n    };\n    this.next = this.next.bind(this);\n    this.prev = this.prev.bind(this);\n    this.configTableChange = this.configTableChange.bind(this);\n    this.setSubInfo = this.setSubInfo.bind(this);\n    this.setLectureSlots = this.setLectureSlots.bind(this);\n  }\n  setLectureSlots(values) {\n    console.log(values);\n    this.setState({\n      ...this.state,\n      lec_slot: values,\n    });\n  }\n  setSubInfo(values) {\n    this.setState({\n      ...this.state,\n      subInfo: values,\n    });\n  }\n  configTableChange(values) {\n    console.log(\"Success:\", values);\n    this.setState({\n      numberOfPeriods: values.numberOfPeriods,\n      numberOfSub: values.numberOfSub,\n      table_name: values.table_name,\n    });\n  }\n  next() {\n    this.setState({ ...this.state, current: this.state.current + 1 });\n  }\n  prev() {\n    this.setState({ ...this.state, current: this.state.current - 1 });\n  }\n  redirectToHome = () => {\n    this.props.history.push(\"/allTables\");\n  };\n  render() {\n    const current = this.state.current;\n    switch (current) {\n      case 0:\n        return (\n          <div className=\"add_wrapper\">\n            <Steps current={this.state.current}>\n              {steps.map((item) => (\n                <Step key={item.title} title={item.title} />\n              ))}\n            </Steps>\n            <ConfigureTable\n              next={this.next}\n              configTableChange={this.configTableChange}\n            ></ConfigureTable>\n          </div>\n        );\n      case 1:\n        return (\n          <div className=\"add_wrapper\">\n            <Steps current={this.state.current}>\n              {steps.map((item) => (\n                <Step key={item.title} title={item.title} />\n              ))}\n            </Steps>\n            <ConfigureSubjects\n              next={this.next}\n              prev={this.prev}\n              numberOfSub={this.state.numberOfSub}\n              setSubInfo={this.setSubInfo}\n            ></ConfigureSubjects>\n          </div>\n        );\n      case 2:\n        return (\n          <div className=\"add_wrapper\">\n            <Steps current={this.state.current}>\n              {steps.map((item) => (\n                <Step key={item.title} title={item.title} />\n              ))}\n            </Steps>\n            <SelectSlots\n              numberOfPeriods={this.state.numberOfPeriods}\n              setLectureSlots={this.setLectureSlots}\n              next={this.next}\n              prev={this.prev}\n            ></SelectSlots>\n          </div>\n        );\n      case 3:\n        return (\n          <div className=\"add_wrapper\">\n            <Steps current={this.state.current}>\n              {steps.map((item) => (\n                <Step key={item.title} title={item.title} />\n              ))}\n            </Steps>\n            <CompleteTable\n              redirectToHome={this.redirectToHome}\n              tableinfo={this.state}\n              next={this.next}\n              prev={this.prev}\n            ></CompleteTable>\n          </div>\n        );\n    }\n  }\n}\n\nexport default AddTable;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/CompleteTable.js",["174","175","176","177"],"import React, { Component } from \"react\";\nimport { Table, Select, Button, message } from \"antd\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor\";\nimport axios from \"axios\";\nconst { Option } = Select;\nconst days = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\nconst dateToFormat = \"dd/mm/yyyy\";\nclass CompleteTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      btnLoading: false,\n      completeDetails: {\n        Monday: {},\n        Tuesday: {},\n        Wednesday: {},\n        Thursday: {},\n        Friday: {},\n        Saturday: {},\n        Sunday: {},\n      },\n    };\n  }\n  createMenuOption = () => {\n    let options = [];\n    const subs = this.props.tableinfo;\n    for (let i = 1; i <= subs.numberOfSub; ++i) {\n      let temp = {};\n      temp[`Sub_${i}_Name`] = subs.subInfo[`Sub_${i}_Name`];\n      temp[`Sub_${i}_Teacher`] = subs.subInfo[`Sub_${i}_Teacher`];\n      options.push(temp);\n    }\n    return options;\n  };\n  createData = () => {\n    let data = [];\n    let periods = this.props.tableinfo.numberOfPeriods;\n    for (let i = 0; i < 7; ++i) {\n      let row = [];\n      row[\"key\"] = i + 1;\n      row[\"Day\"] = days[i];\n      for (let j = 0; j < periods; ++j) {\n        row[`Lecture_${j + 1}_Slot`] = i;\n      }\n      data.push(row);\n    }\n    return data;\n  };\n  handleSelectChange = (details) => {\n    const x = details.split(\"'__'\");\n    var sub = x[0];\n    var day = x[1];\n    var slot = x[2];\n    this.setState((prevState) => {\n      const setObj = prevState.completeDetails;\n      if (setObj) {\n        setObj[days[day]][slot] = sub;\n      }\n      console.log(setObj);\n      return {\n        ...prevState,\n        completeDetails: setObj,\n      };\n    });\n  };\n  createColumns = () => {\n    let columns = [];\n    columns.push({\n      title: \"Day\",\n      dataIndex: \"Day\",\n      key: \"Day\",\n      render: (day) => {\n        return <div style={{ fontWeight: 700 }}>{day}</div>;\n      },\n    });\n    for (let i = 1; i <= this.props.tableinfo.numberOfPeriods; ++i) {\n      var s = `Lecture_${i}_Slot`;\n      let timeSlots = this.props.tableinfo.lec_slot;\n      let slot;\n      for (var prop in timeSlots) {\n        if (s == prop) {\n          slot = timeSlots[prop];\n        }\n      }\n\n      let tit = `${slot[0].format(\"hh:mm\")} - ${slot[1].format(\"hh:mm\")}`;\n      let subjects = this.createMenuOption();\n      columns.push({\n        title: tit,\n        dataIndex: s,\n        key: s,\n        render: (row) => {\n          return (\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"Select a subject\"\n              optionFilterProp=\"children\"\n              onChange={this.handleSelectChange}\n            >\n              {subjects.map((sub, index) => {\n                const str = sub[`Sub_${index + 1}_Name`];\n\n                return (\n                  <Option key={index} value={`${str}'__'${row}'__'${i}`}>\n                    {str}\n                  </Option>\n                );\n              })}\n              <Option value={`Break'__'${row}'__'${i}`}>Break</Option>\n              <Option value={`NA'__'${row}'__'${i}`}>---</Option>\n            </Select>\n          );\n        },\n      });\n    }\n    return columns;\n  };\n  onCreateClick = () => {\n    this.setState({ ...this.state, btnLoading: true });\n    const { table_name, lec_slot } = this.props.tableinfo;\n    var result = {};\n    result[\"tableName\"] = table_name;\n    var periods = [];\n    for (var slot in lec_slot) {\n      if (lec_slot.hasOwnProperty(slot)) {\n        var temp = {};\n        temp[\"1\"] = `${lec_slot[slot][0].format(\"hh:mm\")}-${lec_slot[\n          slot\n        ][1].format(\"hh:mm\")}`;\n\n        periods.push(temp);\n      }\n    }\n    result[\"periods\"] = periods;\n    console.log(this.state.completeDetails);\n    var table = [];\n    for (var day in this.state.completeDetails) {\n      if (this.state.completeDetails.hasOwnProperty(day)) {\n        var temp = {};\n        temp[\"day\"] = day;\n        temp[\"schedule\"] = this.state.completeDetails[day];\n        table.push(temp);\n      }\n    }\n    result[\"table\"] = table;\n\n    let subjects = {};\n    subjects[\"numberOfSub\"] = this.props.tableinfo.numberOfSub;\n    subjects[\"subInfo\"] = this.props.tableinfo.subInfo;\n    result[\"subjects\"] = subjects;\n    console.log(result);\n    setTimeout(() => {\n      axiosInstance\n        .post(\"/table\", result)\n        .then((res) => {\n          message.success(\"Table created successfully\");\n          this.setState({ ...this.state, btnLoading: false }, () => {\n            this.props.redirectToHome();\n          });\n        })\n        .catch((err) => {\n          this.setState({ ...this.state, btnLoading: false });\n          message.warn(err.message);\n          console.log(err);\n        });\n    }, 2000);\n  };\n  render() {\n    const columns = this.createColumns();\n    const data = this.createData();\n    console.log(this.props);\n    return (\n      <div className=\"input_wrapper\">\n        <Table\n          columns={columns}\n          dataSource={data}\n          style={{\n            overflowX: \"scroll\",\n          }}\n        ></Table>\n        <div\n          style={{\n            marginTop: \"20px\",\n            textAlign: \"right\",\n          }}\n        >\n          <Button htmlType=\"button\" onClick={this.props.prev}>\n            Previous\n          </Button>\n          <Button\n            type=\"primary\"\n            loading={this.state.btnLoading}\n            onClick={() => {\n              this.onCreateClick();\n            }}\n            style={{\n              marginLeft: \"10px\",\n            }}\n          >\n            Create\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CompleteTable;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/ConfigureSubjects.js",[],"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/ConfigureTable.js",["178"],"import React, { Component } from \"react\";\nimport { Input, Form, Button, Space, InputNumber } from \"antd\";\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\nclass CompleteTable extends Component {\n  constructor(props) {\n    super(props);\n    this.onFinish = this.onFinish.bind(this);\n  }\n  onFinish(values) {\n    this.props.next();\n    this.props.configTableChange(values);\n  }\n  onFinishFailed(errorInfo) {\n    console.log(\"Failed:\", errorInfo);\n  }\n  render() {\n    return (\n      <div className=\"input_wrapper\">\n        <Form\n          {...layout}\n          name=\"basic\"\n          onFinish={this.onFinish}\n          onFinishFailed={this.onFinishFailed}\n        >\n          <Form.Item\n            label=\"Lectures in a day\"\n            name=\"numberOfPeriods\"\n            rules={[\n              {\n                required: true,\n                message: \"Please Select number of periods/Lectures in a day\",\n              },\n            ]}\n          >\n            <InputNumber\n              min={1}\n              max={100}\n              style={{\n                width: \"100%\",\n              }}\n              placeholder=\"Number of lectures in a day\"\n            ></InputNumber>\n            {/* <Input\n              required={true}\n              placeholder=\"Number of lectures in a day\"\n            ></Input> */}\n          </Form.Item>\n          <Form.Item\n            label=\"Table Name\"\n            name=\"table_name\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input the table name\",\n              },\n            ]}\n          >\n            <Input placeholder=\"Table Name\"></Input>\n          </Form.Item>\n          <Form.Item\n            label=\"Number of Subjects\"\n            name=\"numberOfSub\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input number of subjects\",\n              },\n            ]}\n          >\n            <InputNumber\n              min={1}\n              max={100}\n              style={{\n                width: \"100%\",\n              }}\n              placeholder=\"Number of subjects\"\n            ></InputNumber>\n          </Form.Item>\n          <Form.Item style={{ justifyContent: \"flex-end\" }}>\n            <Button htmlType=\"button\">Cancel</Button>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              style={{\n                marginLeft: \"10px\",\n              }}\n            >\n              Next\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\nexport default CompleteTable;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AddTable/SelectSlots.js",["179"],"import React, { Component } from \"react\";\nimport { TimePicker, Form, Input, Button } from \"antd\";\n\nconst { RangePicker } = TimePicker;\n\nclass SelectSlots extends Component {\n  constructor(props) {\n    super(props);\n    this.onFinish = this.onFinish.bind(this);\n  }\n  onFinish(values) {\n    console.log(values);\n    this.props.setLectureSlots(values);\n    this.props.next();\n  }\n  render() {\n    console.log(this.props);\n    const formItems = () => {\n      let items = [];\n      for (var i = 1; i <= this.props.numberOfPeriods; ++i) {\n        items.push(\n          <Form.Item\n            label={`Lecture ${i} Slot`}\n            name={`Lecture_${i}_Slot`}\n            rules={[\n              {\n                required: true,\n                message: \"Please Select Time Slot\",\n              },\n            ]}\n            style={{ width: \"100%\" }}\n          >\n            <RangePicker></RangePicker>\n          </Form.Item>\n        );\n      }\n      return items;\n    };\n    return (\n      <div className=\"input_wrapper\">\n        <Form\n          name=\"basic\"\n          onFinish={this.onFinish}\n          onFinishFailed={this.onFinishFailed}\n        >\n          {formItems().map((jsxel) => {\n            return jsxel;\n          })}\n          <Form.Item style={{ textAlign: \"right\" }}>\n            <Button htmlType=\"button\" onClick={this.props.prev}>\n              Previous\n            </Button>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              style={{\n                marginLeft: \"10px\",\n              }}\n            >\n              Next\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\nexport default SelectSlots;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/utils/axiosInterceptor.js",[],"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/Spinner/Spinner.js",[],"/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AllTables/AllTables.js",["180","181"],"import React, { Component } from \"react\";\r\nimport { Row, Col, Skeleton, message, Tooltip, Divider, Modal } from \"antd\";\r\nimport { axiosInstance } from \"../../utils/axiosInterceptor.js\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DelTable from \"./DelTable\";\r\nimport \"./AllTables.css\";\r\n\r\nconst Card = (props) => {\r\n  console.log(props);\r\n  let creationDate;\r\n  if (props.createdAt) {\r\n    console.log(props.createdAt.split(\"T\"));\r\n    creationDate = props.createdAt.split(\"T\")[0];\r\n  }\r\n  let updateDate;\r\n  if (props.updatedAt) {\r\n    updateDate = props.updatedAt.split(\"T\")[0];\r\n  }\r\n  return (\r\n    <div className=\"table_card\">\r\n      <div className=\"table_card_name\">\r\n        <div></div>\r\n        <div>{props.tableName}</div>\r\n\r\n        <DelTable table={props}></DelTable>\r\n      </div>\r\n      <div className=\"option_table\">\r\n        <Link to={`/tables/${props.tableId}`}>\r\n          <div className=\"view \">View</div>\r\n        </Link>\r\n        <Link to={`/editTable/${props.tableId}`}>\r\n          <div className=\"update\">Update</div>\r\n        </Link>\r\n      </div>\r\n      <div className=\"table_card_dates\">\r\n        <Tooltip title={props.createdAt}>\r\n          <div>Created On : {creationDate}</div>\r\n        </Tooltip>\r\n\r\n        <Tooltip title={props.updatedAt} placement=\"bottom\">\r\n          <div>updated On : {updateDate}</div>\r\n        </Tooltip>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nclass AllTables extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      tables: null,\r\n    };\r\n    this.fetchAllTables = this.fetchAllTables.bind(this);\r\n  }\r\n  fetchAllTables() {\r\n    this.setState({ ...this.state, loading: true });\r\n    setTimeout(() => {\r\n      axiosInstance\r\n        .get(\"/table\")\r\n        .then((res) => {\r\n          console.log(res);\r\n          this.setState({\r\n            ...this.state,\r\n            tables: res.data.results,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n          });\r\n          console.log(err);\r\n          message.warn(err.message);\r\n        });\r\n    }, 2000);\r\n  }\r\n  componentDidMount() {\r\n    this.fetchAllTables();\r\n  }\r\n  render() {\r\n    console.log(this.props.history);\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <div className=\"all_header\">Tables</div>\r\n        <Divider></Divider>\r\n        {!this.state.loading ? (\r\n          <Row gutter={[16, 24]}>\r\n            <Col md={8} sm={12} xs={24}>\r\n              <div className=\"table_card addTable\">\r\n                <Tooltip title=\"Add Tables\">\r\n                  <Link to=\"/addTable\">\r\n                    <div id=\"dots\">\r\n                      <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\r\n                    </div>\r\n                  </Link>\r\n                </Tooltip>\r\n              </div>\r\n            </Col>\r\n            {this.state.tables\r\n              ? this.state.tables.map((table) => {\r\n                  return (\r\n                    <Col md={8} sm={12} xs={24}>\r\n                      <Card\r\n                        tableName={table.tableName}\r\n                        createdAt={table.createdAt}\r\n                        updatedAt={table.updatedAt}\r\n                        tableId={table._id}\r\n                        fetchAllTables={this.fetchAllTables}\r\n                      ></Card>\r\n                    </Col>\r\n                  );\r\n                })\r\n              : null}\r\n          </Row>\r\n        ) : (\r\n          <Skeleton ative></Skeleton>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AllTables;\r\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/AllTables/DelTable.js",["182"],"import React, { Component } from \"react\";\nimport { Modal, Tooltip, Button, message } from \"antd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { fas, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor.js\";\nimport \"./AllTables.css\";\nclass DelTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.deleteTable = this.deleteTable.bind(this);\n  }\n  handleCancel() {\n    this.setState({\n      ...this.state,\n      isOpen: false,\n      btnLoading: false,\n    });\n  }\n  deleteTable() {\n    this.setState({ ...this.state, btnLoading: true });\n    setTimeout(() => {\n      axiosInstance\n        .delete(`/table/${this.props.table.tableId}`)\n        .then((res) => {\n          console.log(res);\n          message.success(\"Table deleted successfully\");\n          this.setState(\n            { ...this.state, btnLoading: false, isOpen: false },\n            () => {\n              this.props.table.fetchAllTables();\n            }\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n          this.setState({ ...this.state, btnLoading: false, isOpen: false });\n          message.warn(err.message);\n        });\n    }, 2000);\n  }\n  render() {\n    return (\n      <>\n        <div>\n          <Modal\n            visible={this.state.isOpen}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            footer={[]}\n          >\n            <div className=\"modalContent\">\n              <div className=\"header\">\n                Do you really want to delete {this.props.table.tableName}?\n              </div>\n              <div className=\"footer\">\n                <Button\n                  style={{\n                    justifyContent: \"center\",\n                    backgroundColor: \"white\",\n                    borderColor: \"#f05454\",\n                    color: \"#f05454\",\n                    fontWeight: 600,\n                    textAlign: \"center\",\n                    borderRadius: \"10px\",\n                    marginRight: \"10px\",\n                  }}\n                  onClick={this.handleCancel}\n                >\n                  Cancel\n                </Button>\n\n                <Button\n                  style={{\n                    justifyContent: \"center\",\n                    backgroundColor: \"#f05454\",\n                    borderColor: \"#f05454\",\n                    color: \"#fff\",\n                    fontWeight: 600,\n                    textAlign: \"center\",\n                    borderRadius: \"10px\",\n                  }}\n                  loading={this.state.btnLoading}\n                  onClick={this.deleteTable}\n                >\n                  Delete\n                </Button>\n              </div>\n            </div>\n          </Modal>\n          <Tooltip title=\"Delete Table\" placement=\"bottom\">\n            <FontAwesomeIcon\n              icon={faTrash}\n              onClick={() => {\n                this.setState({ ...this.state, isOpen: true });\n              }}\n            ></FontAwesomeIcon>\n          </Tooltip>\n        </div>\n      </>\n    );\n  }\n}\nexport default DelTable;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/EditTable/EditTable.js",["183","184","185","186"],"import React, { Component } from \"react\";\r\nimport { axiosInstance } from \"../../utils/axiosInterceptor\";\r\nimport { Button, message, Skeleton, Select } from \"antd\";\r\nimport TableContent from \"../../Components/Content/content\";\r\nimport \"./EditTable.css\";\r\nconst { Option } = Select;\r\nvar days = [\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n  \"Sunday\",\r\n];\r\nclass EditTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      tableName: null,\r\n      columns: null,\r\n      data: null,\r\n      subjects: null,\r\n      isActive: false,\r\n      loading: false,\r\n      btnLoading: false,\r\n      finalData: {},\r\n    };\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.saveNewChanges = this.saveNewChanges.bind(this);\r\n  }\r\n  fetchSubjectDetails() {\r\n    const tableId = this.props.history.location.pathname.split(\"/\")[2];\r\n    this.setState({ ...this.state, loading: true });\r\n    axiosInstance\r\n      .get(`/table/${tableId}/subjects`)\r\n      .then((sub) => {\r\n        this.setState({ ...this.state, loading: false, subjects: sub.data });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ ...this.state, loading: false });\r\n        console.log(err);\r\n        if (err.message) {\r\n          message.warn(err.message);\r\n        }\r\n      });\r\n  }\r\n  componentDidMount() {\r\n    this.fetchTableDetails();\r\n    this.fetchSubjectDetails();\r\n  }\r\n  onSelectChange(event) {\r\n    let change = this.state.finalData;\r\n    let x = event.split(\"'__'\");\r\n    let new_sub = x[0];\r\n    let col = x[1];\r\n    let day = x[2];\r\n\r\n    if (change.hasOwnProperty(day)) {\r\n      change[day][col] = new_sub;\r\n    } else {\r\n      change[day] = {};\r\n      change[day][col] = new_sub;\r\n    }\r\n    console.log(change);\r\n    this.setState({\r\n      ...this.state,\r\n      finalData: change,\r\n    });\r\n  }\r\n  saveNewChanges() {\r\n    const tableId = this.props.history.location.pathname.split(\"/\")[2];\r\n    let update = this.state.finalData;\r\n    update[\"tableName\"] = this.state.tableName;\r\n    console.log(update);\r\n    this.setState({ ...this.state, btnLoading: true });\r\n    setTimeout(() => {\r\n      axiosInstance\r\n        .put(`/table/${tableId}`, update)\r\n        .then((res) => {\r\n          message.success(\"Table update successfully\");\r\n          this.setState({ ...this.state, btnLoading: false }, () => {\r\n            this.props.history.push(`/tables/${tableId}`);\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.setState({ ...this.state, btnLoading: false });\r\n          message.warn(err.message);\r\n        });\r\n    }, 2000);\r\n  }\r\n  createColumns(periods) {\r\n    var columns = [];\r\n    let dayCol = {\r\n      title: \"Day\",\r\n      dataIndex: \"Day\",\r\n      key: \"Day\",\r\n      render: (day) => {\r\n        return <div style={{ fontWeight: 700 }}>{day}</div>;\r\n      },\r\n    };\r\n    columns.push(dayCol);\r\n\r\n    periods.map((period, index) => {\r\n      let temp = {};\r\n      temp[\"title\"] = period[1];\r\n      temp[\"dataIndex\"] = `Day`;\r\n      temp[\"dataIndex\"] = index + 1;\r\n      temp[\"key\"] = index + 1;\r\n      temp[\"render\"] = (subject) => {\r\n        if (subject) {\r\n          let x = subject.split(\"'__'\");\r\n          return (\r\n            <Select\r\n              onChange={this.onSelectChange}\r\n              style={{ width: \"100%\" }}\r\n              defaultValue={x[0]}\r\n            >\r\n              {this.state.subjects.subjects.map((sub) => {\r\n                return (\r\n                  <Option\r\n                    key={sub.name}\r\n                    value={`${sub.name}'__'${index + 1}'__'${x[1]}`}\r\n                  >\r\n                    {sub.name}\r\n                  </Option>\r\n                );\r\n              })}\r\n              <Option key={`Break'__'${index + 1}'__'${x[1]}`}>Break</Option>\r\n              <Option key={`NA'__'${index + 1}'__'${x[1]}`}>---</Option>\r\n            </Select>\r\n          );\r\n        }\r\n      };\r\n      columns.push(temp);\r\n    });\r\n    this.setState({\r\n      ...this.state,\r\n      columns: columns,\r\n    });\r\n  }\r\n  createData(data) {\r\n    var tabledata = [];\r\n    data.map((row, index) => {\r\n      var temp = {};\r\n      temp[\"key\"] = index;\r\n      temp[\"Day\"] = row.day;\r\n      var setsch = {};\r\n      console.log(row.schedule);\r\n      for (var key in Object.keys(row.schedule)) {\r\n        const k = Number(key) + 1;\r\n        if (row.schedule.hasOwnProperty(k)) {\r\n          setsch[k] = `${row.schedule[k]}'__'${row.day}`;\r\n        }\r\n      }\r\n      let merged = { ...temp, ...setsch };\r\n      console.log(merged);\r\n      tabledata.push(merged);\r\n    });\r\n    this.setState({\r\n      ...this.state,\r\n      data: tabledata,\r\n    });\r\n  }\r\n  fetchTableDetails = () => {\r\n    const tableId = this.props.history.location.pathname.split(\"/\")[2];\r\n    this.setState({ ...this.state, loading: true });\r\n    setTimeout(() => {\r\n      axiosInstance\r\n        .get(`/table/${tableId}`)\r\n        .then((table) => {\r\n          this.createColumns(table.data.periods);\r\n          this.createData(table.data.table);\r\n          this.setState({\r\n            ...this.state,\r\n            tableName: table.data.tableName,\r\n            tableId: tableId,\r\n            loading: false,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          if (err.message) {\r\n            message.warn(err.message);\r\n          }\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n          });\r\n        });\r\n    }, 1000);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"edit_table_wrapper\">\r\n        {!this.state.loading && this.state.columns && this.state.data ? (\r\n          <>\r\n            <div className=\"content_header active\">\r\n              <input\r\n                type=\"text\"\r\n                className={\r\n                  this.state.isActive ? \"table_inp_active\" : \"table_inp\"\r\n                }\r\n                value={this.state.tableName}\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    ...this.state,\r\n                    tableName: e.target.value,\r\n                  });\r\n                }}\r\n                onFocus={() => {\r\n                  this.setState({\r\n                    ...this.state,\r\n                    isActive: true,\r\n                  });\r\n                }}\r\n                onBlur={() => {\r\n                  this.setState({\r\n                    ...this.state,\r\n                    isActive: false,\r\n                  });\r\n                }}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <TableContent\r\n                columns={this.state.columns}\r\n                data={this.state.data}\r\n              ></TableContent>\r\n            </div>\r\n            <div className=\"edit_footer\">\r\n              <div className=\"action_btns\">\r\n                <Button\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    color: \"#f05454\",\r\n                    border: \"1px solid #f05454\",\r\n                    marginLeft: \"5px\",\r\n                    borderRadius: \"10px\",\r\n                    fontWeight: 600,\r\n                    loading: false,\r\n                  }}\r\n                  onClick={() => {\r\n                    const tableId = this.props.history.location.pathname.split(\r\n                      \"/\"\r\n                    )[2];\r\n                    this.props.history.push(`/tables/${tableId}`);\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  style={{\r\n                    backgroundColor: \"#f05454\",\r\n                    color: \"white\",\r\n                    border: \"1px solid #f05454\",\r\n                    marginLeft: \"5px\",\r\n                    borderRadius: \"10px\",\r\n                    fontWeight: 600,\r\n                  }}\r\n                  loading={this.state.btnLoading}\r\n                  onClick={this.saveNewChanges}\r\n                >\r\n                  Save Changes\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <Skeleton active></Skeleton>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditTable;\r\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Pages/MyTables/SubjectModal.js",["187"],"import React, { Component } from \"react\";\nimport { Modal, message, Skeleton, Divider } from \"antd\";\nimport MyButton from \"../../Components/MyButton/MyButton\";\nimport \"./MyTables.css\";\nimport { axiosInstance } from \"../../utils/axiosInterceptor.js\";\n\nclass SubjectModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalVisible: false,\n      loading: false,\n      subjectData: null,\n    };\n    this.fetchSubjectDetails = this.fetchSubjectDetails.bind(this);\n  }\n  fetchSubjectDetails() {\n    this.setState({\n      ...this.state,\n      loading: true,\n    });\n    const tableId = this.props.history.location.pathname.split(\"/\")[2];\n    setTimeout(() => {\n      axiosInstance\n        .get(`/table/${tableId}/subjects`)\n        .then((res) => {\n          this.setState({\n            ...this.state,\n            loading: false,\n            subjectData: res.data,\n          });\n        })\n        .catch((err) => {\n          message.warn(err.message);\n          this.setState({\n            ...this.state,\n            loading: false,\n          });\n        });\n    }, 1000);\n  }\n  render() {\n    return (\n      <>\n        <div className=\"subject_btn\">\n          <Modal\n            visible={this.state.isModalVisible}\n            onCancel={() => {\n              this.setState({\n                ...this.state,\n                isModalVisible: false,\n              });\n            }}\n            style={{\n              height: \"20vh\",\n            }}\n            footer={[]}\n          >\n            <div className=\"sub_modal\">\n              {this.state.subjectData && !this.state.loading ? (\n                <>\n                  <div className=\"sub_modal_header\">\n                    <h1>Subjects</h1>\n                  </div>\n\n                  <div className=\"sub_modal_content\">\n                    {/* <div className=\"particular_sub_header\">\n                      <div>Subject Name</div>\n                      <div>Teacher Name</div>\n                    </div> */}\n                    <div className=\"particular_subname_header\">\n                      <div className=\"header_subname\">\n                        <div\n                          style={{\n                            fontWeight: \"600\",\n                            fontSize: \"16px\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                          Subject Name\n                        </div>\n                        <div\n                          style={{\n                            textAlign: \"center\",\n                            fontWeight: \"600\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Teacher Name\n                        </div>\n                      </div>\n                      <div className=\"content_subname\">\n                        {this.state.subjectData.subjects.map((subject) => {\n                          return (\n                            <div className=\"particular_sub\">\n                              <div>{subject.name}</div>\n                              <div>{subject.teacher}</div>\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                    {/* <div className=\"particular_subteacher_header\">\n                      <div style={{ fontWeight: \"600\", fontSize: \"16px\" }}>\n                        Teacher Name\n                      </div>\n                      {this.state.subjectData.subjects.map((subject) => {\n                        return (\n                          <div className=\"particular_subteacher\">\n                            <div>{subject.teacher}</div>\n                          </div>\n                        );\n                      })}\n                    </div> */}\n                  </div>\n                </>\n              ) : (\n                <Skeleton active></Skeleton>\n              )}\n            </div>\n          </Modal>\n          <MyButton\n            onClick={() => {\n              this.setState(\n                {\n                  ...this.state,\n                  isModalVisible: true,\n                },\n                () => {\n                  this.fetchSubjectDetails();\n                }\n              );\n            }}\n            text=\"Subjects\"\n            style={{\n              borderRadius: \"10px\",\n              width: \"100px\",\n              marginRight: \"10px\",\n            }}\n          ></MyButton>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SubjectModal;\n","/mnt/c/Users/yuvra/Documents/RealTimeTables/RealTimeTablesFrontend/Real-Time-Tables-FrontEnd/src/Components/UseDisplay/UserDisplay.js",["188"],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":2,"column":17,"nodeType":"195","messageId":"196","endLine":2,"endColumn":21},{"ruleId":"193","severity":1,"message":"197","line":3,"column":8,"nodeType":"195","messageId":"196","endLine":3,"endColumn":12},{"ruleId":"193","severity":1,"message":"198","line":6,"column":8,"nodeType":"195","messageId":"196","endLine":6,"endColumn":17},{"ruleId":"193","severity":1,"message":"199","line":7,"column":3,"nodeType":"195","messageId":"196","endLine":7,"endColumn":14},{"ruleId":"193","severity":1,"message":"200","line":9,"column":17,"nodeType":"195","messageId":"196","endLine":9,"endColumn":23},{"ruleId":"201","severity":1,"message":"202","line":33,"column":16,"nodeType":"203","messageId":"204","endLine":33,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":35,"column":16,"nodeType":"203","messageId":"204","endLine":35,"endColumn":18},{"ruleId":"201","severity":1,"message":"205","line":79,"column":37,"nodeType":"203","messageId":"204","endLine":79,"endColumn":39},{"ruleId":"201","severity":1,"message":"205","line":80,"column":37,"nodeType":"203","messageId":"204","endLine":80,"endColumn":39},{"ruleId":"201","severity":1,"message":"205","line":87,"column":45,"nodeType":"203","messageId":"204","endLine":87,"endColumn":47},{"ruleId":"201","severity":1,"message":"205","line":92,"column":45,"nodeType":"203","messageId":"204","endLine":92,"endColumn":47},{"ruleId":"206","severity":1,"message":"207","line":104,"column":13,"nodeType":"208","endLine":104,"endColumn":52},{"ruleId":"209","severity":1,"message":"210","line":181,"column":17,"nodeType":"211","endLine":181,"endColumn":48},{"ruleId":"212","severity":1,"message":"213","line":5,"column":3,"nodeType":"214","messageId":"215","endLine":7,"endColumn":4},{"ruleId":"212","severity":1,"message":"213","line":5,"column":3,"nodeType":"214","messageId":"215","endLine":7,"endColumn":4},{"ruleId":"193","severity":1,"message":"216","line":3,"column":8,"nodeType":"195","messageId":"196","endLine":3,"endColumn":16},{"ruleId":"193","severity":1,"message":"217","line":5,"column":27,"nodeType":"195","messageId":"196","endLine":5,"endColumn":36},{"ruleId":"193","severity":1,"message":"218","line":6,"column":16,"nodeType":"195","messageId":"196","endLine":6,"endColumn":26},{"ruleId":"193","severity":1,"message":"219","line":11,"column":9,"nodeType":"195","messageId":"196","endLine":11,"endColumn":16},{"ruleId":"201","severity":1,"message":"205","line":74,"column":41,"nodeType":"203","messageId":"204","endLine":74,"endColumn":43},{"ruleId":"201","severity":1,"message":"205","line":97,"column":39,"nodeType":"203","messageId":"204","endLine":97,"endColumn":41},{"ruleId":"193","severity":1,"message":"220","line":127,"column":25,"nodeType":"195","messageId":"196","endLine":127,"endColumn":34},{"ruleId":"193","severity":1,"message":"221","line":5,"column":3,"nodeType":"195","messageId":"196","endLine":5,"endColumn":10},{"ruleId":"193","severity":1,"message":"222","line":6,"column":3,"nodeType":"195","messageId":"196","endLine":6,"endColumn":9},{"ruleId":"193","severity":1,"message":"223","line":8,"column":3,"nodeType":"195","messageId":"196","endLine":8,"endColumn":14},{"ruleId":"193","severity":1,"message":"224","line":12,"column":10,"nodeType":"195","messageId":"196","endLine":12,"endColumn":23},{"ruleId":"193","severity":1,"message":"225","line":13,"column":8,"nodeType":"195","messageId":"196","endLine":13,"endColumn":15},{"ruleId":"206","severity":1,"message":"207","line":46,"column":15,"nodeType":"208","endLine":46,"endColumn":46},{"ruleId":"193","severity":1,"message":"226","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":15},{"ruleId":"193","severity":1,"message":"227","line":4,"column":42,"nodeType":"195","messageId":"196","endLine":4,"endColumn":48},{"ruleId":"212","severity":1,"message":"213","line":12,"column":3,"nodeType":"214","messageId":"215","endLine":14,"endColumn":4},{"ruleId":"193","severity":1,"message":"228","line":2,"column":24,"nodeType":"195","messageId":"196","endLine":2,"endColumn":34},{"ruleId":"193","severity":1,"message":"229","line":6,"column":10,"nodeType":"195","messageId":"196","endLine":6,"endColumn":16},{"ruleId":"193","severity":1,"message":"230","line":6,"column":18,"nodeType":"195","messageId":"196","endLine":6,"endColumn":23},{"ruleId":"193","severity":1,"message":"194","line":6,"column":25,"nodeType":"195","messageId":"196","endLine":6,"endColumn":29},{"ruleId":"193","severity":1,"message":"198","line":7,"column":8,"nodeType":"195","messageId":"196","endLine":7,"endColumn":17},{"ruleId":"193","severity":1,"message":"231","line":8,"column":9,"nodeType":"195","messageId":"196","endLine":8,"endColumn":15},{"ruleId":"193","severity":1,"message":"232","line":8,"column":17,"nodeType":"195","messageId":"196","endLine":8,"endColumn":24},{"ruleId":"193","severity":1,"message":"233","line":8,"column":26,"nodeType":"195","messageId":"196","endLine":8,"endColumn":32},{"ruleId":"193","severity":1,"message":"234","line":8,"column":34,"nodeType":"195","messageId":"196","endLine":8,"endColumn":39},{"ruleId":"193","severity":1,"message":"219","line":9,"column":9,"nodeType":"195","messageId":"196","endLine":9,"endColumn":16},{"ruleId":"201","severity":1,"message":"205","line":24,"column":29,"nodeType":"203","messageId":"204","endLine":24,"endColumn":31},{"ruleId":"193","severity":1,"message":"217","line":8,"column":3,"nodeType":"195","messageId":"196","endLine":8,"endColumn":12},{"ruleId":"193","severity":1,"message":"235","line":12,"column":19,"nodeType":"195","messageId":"196","endLine":12,"endColumn":24},{"ruleId":"193","severity":1,"message":"236","line":17,"column":7,"nodeType":"195","messageId":"196","endLine":17,"endColumn":11},{"ruleId":"237","severity":1,"message":"238","line":87,"column":33,"nodeType":"239","messageId":"240","endLine":87,"endColumn":35},{"ruleId":"237","severity":1,"message":"238","line":102,"column":27,"nodeType":"239","messageId":"240","endLine":102,"endColumn":29},{"ruleId":"193","severity":1,"message":"241","line":134,"column":11,"nodeType":"195","messageId":"196","endLine":134,"endColumn":12},{"ruleId":"212","severity":1,"message":"213","line":5,"column":3,"nodeType":"214","messageId":"215","endLine":7,"endColumn":4},{"ruleId":"193","severity":1,"message":"242","line":2,"column":17,"nodeType":"195","messageId":"196","endLine":2,"endColumn":22},{"ruleId":"193","severity":1,"message":"243","line":2,"column":24,"nodeType":"195","messageId":"196","endLine":2,"endColumn":28},{"ruleId":"193","severity":1,"message":"200","line":2,"column":30,"nodeType":"195","messageId":"196","endLine":2,"endColumn":36},{"ruleId":"193","severity":1,"message":"235","line":2,"column":38,"nodeType":"195","messageId":"196","endLine":2,"endColumn":43},{"ruleId":"193","severity":1,"message":"244","line":2,"column":45,"nodeType":"195","messageId":"196","endLine":2,"endColumn":52},{"ruleId":"193","severity":1,"message":"245","line":3,"column":8,"nodeType":"195","messageId":"196","endLine":3,"endColumn":15},{"ruleId":"246","severity":1,"message":"247","line":76,"column":5,"nodeType":"248","messageId":"249","endLine":139,"endColumn":6},{"ruleId":"193","severity":1,"message":"250","line":4,"column":8,"nodeType":"195","messageId":"196","endLine":4,"endColumn":13},{"ruleId":"193","severity":1,"message":"251","line":15,"column":7,"nodeType":"195","messageId":"196","endLine":15,"endColumn":19},{"ruleId":"201","severity":1,"message":"205","line":89,"column":15,"nodeType":"203","messageId":"204","endLine":89,"endColumn":17},{"ruleId":"252","severity":1,"message":"253","line":148,"column":13,"nodeType":"195","messageId":"254","endLine":148,"endColumn":17},{"ruleId":"193","severity":1,"message":"235","line":2,"column":31,"nodeType":"195","messageId":"196","endLine":2,"endColumn":36},{"ruleId":"193","severity":1,"message":"242","line":2,"column":28,"nodeType":"195","messageId":"196","endLine":2,"endColumn":33},{"ruleId":"193","severity":1,"message":"255","line":2,"column":57,"nodeType":"195","messageId":"196","endLine":2,"endColumn":62},{"ruleId":"193","severity":1,"message":"256","line":5,"column":18,"nodeType":"195","messageId":"196","endLine":5,"endColumn":25},{"ruleId":"193","severity":1,"message":"257","line":4,"column":10,"nodeType":"195","messageId":"196","endLine":4,"endColumn":13},{"ruleId":"193","severity":1,"message":"236","line":7,"column":5,"nodeType":"195","messageId":"196","endLine":7,"endColumn":9},{"ruleId":"258","severity":1,"message":"259","line":26,"column":7,"nodeType":"260","messageId":"204","endLine":26,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":105,"column":33,"nodeType":"239","messageId":"240","endLine":105,"endColumn":35},{"ruleId":"237","severity":1,"message":"238","line":145,"column":27,"nodeType":"239","messageId":"240","endLine":145,"endColumn":29},{"ruleId":"193","severity":1,"message":"261","line":2,"column":36,"nodeType":"195","messageId":"196","endLine":2,"endColumn":43},{"ruleId":"193","severity":1,"message":"200","line":5,"column":10,"nodeType":"195","messageId":"196","endLine":5,"endColumn":16},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'AllTables' is defined but never used.","'faSignInAlt' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'MyButton' is defined but never used.","'faSpinner' is defined but never used.","'withRouter' is defined but never used.","'SubMenu' is assigned a value but never used.","'tableName' is assigned a value but never used.","'faCheck' is defined but never used.","'faUser' is defined but never used.","'faEllipsisH' is defined but never used.","'axiosInstance' is defined but never used.","'Spinner' is defined but never used.","'Table' is defined but never used.","'Router' is defined but never used.","'Breadcrumb' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","'Space' is defined but never used.","'days' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'d' is assigned a value but never used.","'Input' is defined but never used.","'Form' is defined but never used.","'message' is defined but never used.","'MyInput' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'axios' is defined but never used.","'dateToFormat' is assigned a value but never used.","no-redeclare","'temp' is already defined.","redeclared","'Modal' is defined but never used.","'faTrash' is defined but never used.","'fas' is defined but never used.","no-dupe-keys","Duplicate key 'loading'.","ObjectExpression","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation"]